{
    "swagger": "2.0",
    "security": [
      {
        "OAuth2": []
      }
    ],
    "securityDefinitions": {
      "OAuth2": {
        "type": "oauth2",
        "description": "To use this API, you need to obtain the OAuth client credentials (client ID and secret) from SAP Ariba. After that, pass these client credentials to the SAP Ariba API token endpoint to obtain an access token.",
        "tokenUrl": "https://{regionOauth}/oauth/token",
        "flow": "application",
        "scopes": {}
      }
    },
    "externalDocs": {
      "description": "More information is available at https://developer.ariba.com/api where you can select your region's datacenter.",
      "url": "https://developer.ariba.com/api"
    },
    "info": {
      "version": "4.0.0",
      "title": "Supplier Data API With Pagination",
      "description": "Using this API, you can create a client application to retrieve supplier data from your SAP Ariba Supplier Lifecycle and Performance or SAP Ariba Supplier Information and Performance Management (new architecture) solution, including supplier names, addresses, registration, qualification, and preferred statuses, and questionnaire details."
    },
    "x-sap-stateInfo": {
      "state": "Active"
    },
    "x-sap-shortText": "Extracts Supplier data",
    "host": "sandbox.api.sap.com",
    "basePath": "/ariba/api/supplierdatapagination/v4/sandbox",
    "schemes": [
      "https"
    ],
    "x-sap-ext-overview": [
      {
        "name": "API Group",
        "values": [
          "Supplier Management"
        ]
      },
      {
        "name": "API System Role",
        "values": [
          "SAP Ariba Sourcing"
        ]
      },
      {
        "name": "Datacenters",
        "values": [
          "US",
          "EU",
          "UAE",
          "KSA",
          "CN",
          "AU",
          "JP"
        ]
      }
    ],
    "x-servers": [
      {
        "url": "https://{region}/api/supplierdatapagination/v4/{environment}",
        "description": "Supplier Data API With Pagination endpoint",
        "templates": {
          "region": {
            "enum": [
              "openapi.ariba.com",
              "eu.openapi.ariba.com",
              "mn1.openapi.ariba.com",
              "mn2.openapi.ariba.com",
              "openapi.sapariba.cn",
              "openapi.au.cloud.ariba.com",
              "openapi.jp.cloud.ariba.com"
            ],
            "default": "openapi.ariba.com",
            "description": "The SAP Ariba region where the SAP Ariba APIs are used."
          },
          "regionOauth": {
            "enum": [
              "api.ariba.com",
              "api-eu.ariba.com",
              "api.mn1.ariba.com",
              "api.mn2.ariba.com",
              "api.sapariba.cn",
              "api.au.cloud.ariba.com",
              "api.jp.cloud.ariba.com"
            ],
            "default": "api.ariba.com",
            "description": "The SAP Ariba regional OAuth server associated with the region where the SAP Ariba APIs are used."
          },
          "environment": {
            "enum": [
              "sandbox",
              "prod"
            ],
            "default": "sandbox",
            "description": "Public URI Prefix for different environments, prod is Test or Production environment for Cloud Business Applications and sandbox is Mock environment with sample data. For more information, go to the SAP Ariba Developer Portal at https://developer.ariba.com."
          }
        }
      }
    ],
    "tags": [
      {
        "name": "supplierdatapagination",
        "description": "Supplier Data API With Pagination"
      },
      {
        "name": "Vendor Details",
        "description": "Vendor Details."
      },
      {
        "name": "Contact Details",
        "description": "Contact Details."
      },
      {
        "name": "Modular Questionnaires",
        "description": "Modular Questionnaires"
      },
      {
        "name": "Question & Answers",
        "description": "Question & Answers"
      },
      {
        "name": "Certificates",
        "description": "Vendor Certificates"
      },
      {
        "name": "Workspaces",
        "description": "All Types Of Workspaces"
      },
      {
        "name": "Update Answers",
        "description": "Update Answers"
      },
      {
        "name": "Update Qualification Status",
        "description": "Update Qualification Status or Preferred Level for Vendors."
      }
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/vendorDataRequests/": {
        "post": {
          "tags": [
            "Vendor Details"
          ],
          "summary": "Fetch all vendor details",
          "description": "This API will fetch all the vendor details in increments of 500 vendors per page in either JSON or CSV specified in request body. Optionally you can pass on additional filter parameters to get only a subset of vendors. API accepts query param $skip to get the next page response.",
          "operationId": "getVendors",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "request",
              "in": "body",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ReportRequest"
              }
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 500.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. \nNo offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(500).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(500).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ReportRequestResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendorContactsRequests/": {
        "post": {
          "tags": [
            "Contact Details"
          ],
          "summary": "Fetch all contact details",
          "description": "This API will fetch all the vendor contact details for given vendors Ids.",
          "operationId": "getVendorContacts",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "request",
              "in": "body",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/VendorContactRequest"
              }
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/VendorContactResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            },
            "434": {
              "description": "Limit Exceed",
              "schema": {
                "$ref": "#/definitions/LimitExceed"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/extensionDetails": {
        "get": {
          "tags": [
            "Vendor Details"
          ],
          "summary": "Fetch vendor details",
          "description": "This API will fetch the vendor details in JSON.",
          "operationId": "getVendorExt",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/VendorExtResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/inactiveVendorDataRequests/": {
        "post": {
          "tags": [
            "Vendor Details"
          ],
          "summary": "Fetch inactive vendor details",
          "description": "This API will fetch the inactive vendor records details in  increments of 500 vendors per page. Optionally you can pass  on additional filter parameters to get only a subset of vendors.  API accepts query param $skip to get the next page response.",
          "operationId": "getInactiveVendors",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "request",
              "in": "body",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/InactiVendorRequest"
              }
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 500.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. \nNo offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(500).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(500).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InactiveVendorResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/qna": {
        "get": {
          "tags": [
            "Question & Answers"
          ],
          "summary": "Fetch Question & Answers by SMVendorID.",
          "description": "This API will fetch paginated Question and Answers for a given SMVendorID based on the limit configured in the system. Optionally you can pass on additional filter parameters to get only a subset of question & answers. API accepts query param $skip to get the next page response.",
          "operationId": "getAllQuestionAnswers",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. \nNo offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionAndAnswersResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/{wid}/questionnaires/qna": {
        "get": {
          "tags": [
            "Question & Answers"
          ],
          "summary": "Fetch Question & Answers by SMVendorID and WorkspaceID.",
          "description": "This API will fetch QuestionAnswers for a given SMVendor Id and Workspace Id.\nIt returns paged results  based on the limit configured in system. Optionally you can pass on additional filter parameters to get only a subset of question & answers for a particular workspaceId. API accepts query param $skip to get the next page response.",
          "operationId": "getQuestionAnswersForWorkSpace",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "wid",
              "in": "path",
              "description": "Workspace Id of the workspace \nExample: WS123456",
              "required": true,
              "type": "string",
              "default": "WS123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionAndAnswersResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "422": {
              "description": "Invalid or missing workspace id",
              "schema": {
                "$ref": "#/definitions/WorkspaceNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/{questionnaireId}/qna": {
        "get": {
          "tags": [
            "Question & Answers"
          ],
          "summary": "Fetch Question & Answers by SMVendorID and QuestionnaireID.",
          "description": "This API will fetch Question & Answers for a given SMVendorID and Questionnaire Id. It returns paginated results based on the limit configured in the system.  Optionally you can pass on additional filter parameters to get only a subset of question & answers for a questionnaireId. API accepts query param $skip to get the next page response.",
          "operationId": "getAllQuestionAnswersForQuestionnaire",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Questionnaire id  of the questionnaire \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \n  Example: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionAndAnswersResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "421": {
              "description": "Questionnaire not found",
              "schema": {
                "$ref": "#/definitions/QuestionnaireNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/{wid}/questionnaires/{questionnaireId}/qna": {
        "get": {
          "tags": [
            "Question & Answers"
          ],
          "summary": "Fetch Question & Answers by SMVendorID, QuestionnaireID and WorkspaceID",
          "description": "This API will fetch Question & Answers for the given SMVendorID, Workspace Id and QuestionnaireId.It returns paged results based on the limit configured in the system. Optionally you can pass on additional filter parameters to get only a subset of question & answers for a workspaceId and questionnaireID. API accepts query param $skip to get the next page response.",
          "operationId": "",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "wid",
              "in": "path",
              "description": "Workspace Id of the Workspace \nExample: WS123456",
              "required": true,
              "type": "string",
              "default": "WS123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Questionnaire Id of the questionnaire \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionAndAnswersResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "421": {
              "description": "Questionnaire not found",
              "schema": {
                "$ref": "#/definitions/QuestionnaireNotFound"
              }
            },
            "422": {
              "description": "Invalid or missing workspace id",
              "schema": {
                "$ref": "#/definitions/WorkspaceNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/{questionnaireId}/qna/versions": {
        "get": {
          "tags": [
            "Question & Answers"
          ],
          "summary": "Fetch Questionnaire responses for latest version.",
          "description": "This API used to export the questionnaire details responses for the latest version id.",
          "operationId": "getVersionIdsForQuestionnaire",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Document Id of the Questionnaire \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnaireVersionsResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "421": {
              "description": "Questionnaire not found",
              "schema": {
                "$ref": "#/definitions/QuestionnaireNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/{questionnaireId}/qna/versions/{versionId}": {
        "get": {
          "tags": [
            "Question & Answers"
          ],
          "summary": "Fetch Questionnaire responses export across version.",
          "description": "This API used to export the questionnaire details responses for a version id.",
          "operationId": "getQuestionnairesForVersion",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Document Id of the Questionnaire \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "versionId",
              "in": "path",
              "description": "This parameter specifies for which version the response should be fetched. When the versionId is not mentioned the recent version response would be fetched.\n\nExample: 5",
              "required": true,
              "type": "integer",
              "default": "1"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnaireVersionsResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "421": {
              "description": "Questionnaire not found",
              "schema": {
                "$ref": "#/definitions/QuestionnaireNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            },
            "431": {
              "description": "Version not found",
              "schema": {
                "$ref": "#/definitions/VersionNotFound"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires": {
        "get": {
          "tags": [
            "Modular Questionnaires"
          ],
          "summary": "Fetch Modular Questionnaires by SMVendorID",
          "description": "This API will fetch paginated details of modular questionnaires for the given SMVendorID based on the limit configured in the system. Optionally you can pass on additional filter parameters to get only a subset of questionnaires. API accepts query param $skip to get the next page response.",
          "operationId": "getQuestionnaires",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=5: returns first 5 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 5.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(5).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(5).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$orderby",
              "in": "query",
              "description": "Specifies the sort order of results. For example, '$orderby=_propertyName_ asc'.\nThe order can be either ascending or descending: asc or desc. If $orderby is not specified, results are sorted in ascending order by default.<br/>\n_propertyName_  -- The column name to sort by. This must be \"timeUpdated\".\n",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            },
            {
              "name": "includeTotalScore",
              "in": "query",
              "description": "This parameter indicates whether or not to include the scoring data for the corresponding modular questionnaire.",
              "required": false,
              "type": "boolean",
              "default": false
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnairesForVendorResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/{wid}/questionnaires": {
        "get": {
          "tags": [
            "Modular Questionnaires"
          ],
          "summary": "Find Modular Questionnaires by SMVendorID and WorkspaceID",
          "description": "This API will fetch paginated details of modular questionnaires for the given SMVendorID and Workspace Id based on the limit configured in the system. Optionally you can pass on additional filter parameters to get only a subset of questionnaires for a workspaceId. API accepts query param $skip to get the next page response.",
          "operationId": "getQuestionnairesForWorkspace",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "wid",
              "in": "path",
              "description": "Workspace Id of the workspace \nExample: WS123456",
              "required": true,
              "type": "string",
              "default": "WS123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=5: returns first 5 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 5.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(5).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(5).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            },
            {
              "name": "includeTotalScore",
              "in": "query",
              "description": "This parameter indicates whether or not to include the scoring data for the corresponding modular questionnaire.",
              "required": false,
              "type": "boolean",
              "default": false
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnairesForVendorResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "422": {
              "description": "Missing or invalid workspace id",
              "schema": {
                "$ref": "#/definitions/WorkspaceNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/{questionnaireId}": {
        "get": {
          "tags": [
            "Modular Questionnaires"
          ],
          "summary": "Fetch Modular Questionnaire by SMVendorID and QuestionnaireID.",
          "description": "This API will fetch details of the Modular Questionnaire for the given SMVendorID and Questionnaire Id.",
          "operationId": "getQuestionnaireDetails",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Questionnaire Id of the questionnaire \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            },
            {
              "name": "includeTotalScore",
              "in": "query",
              "description": "This parameter indicates whether or not to include the scoring data for the corresponding modular questionnaire.",
              "required": false,
              "type": "boolean",
              "default": false
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnairesForVendorAndQuestionnaireResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "421": {
              "description": "Questionnaire not found",
              "schema": {
                "$ref": "#/definitions/QuestionnaireNotFound"
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Modular Questionnaires"
          ],
          "summary": "Update expiry date or due date",
          "description": "This API is used to extend Expiry-Date or Due-Date of Modular Questionnaire using questionnaireId",
          "operationId": "extendDate",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "request",
              "description": "In below request \"expiryDate\" will be considered after Approval \n  \"dueDate\"  be considered before Approval",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ExtendDateRequest"
              }
            },
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Questionnaire ID \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ExtendDateResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found. Specified Questionnaire or Vendor not found",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/InternalServerError"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/{questionnaireId}/scores": {
        "get": {
          "tags": [
            "Modular Questionnaires"
          ],
          "summary": "Fetch Modular Questionnaires score details by SMVendorID and QuestionnaireId.",
          "description": "This API will fetch  Modular Questionnaires score details for a given SMVendorID and QuestionnaireId if MQ evaluation type is Graded.",
          "operationId": "getScores",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Questionnaire ID \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnaireWithScores"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ScoresBadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not found",
              "schema": {
                "$ref": "#/definitions/ResourceNotFound"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/certificates": {
        "get": {
          "tags": [
            "Certificates"
          ],
          "summary": "Fetch Certificate by SMVendorID",
          "description": "This API will fetch Certificate details for the given SMVendorID. It returns paged results based on the limit configured in the system. Optionally you can pass on additional filter parameters to get only a subset of certificates. API accepts query param $skip to get the next page response.",
          "operationId": "getCertificates",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. \nNo offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CertificatesResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/questionnaires/{questionnaireId}/answers": {
        "post": {
          "tags": [
            "Update Answers"
          ],
          "summary": "Update answers by QuestionnaireID",
          "description": "This API is used to update answers to the given set of questions in a questionnaire represented by SMVendorID, Questionnaire ID and externalSystemCorrelationId",
          "operationId": "updateAnswersUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "request",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SubmitSurveyRequest"
              }
            },
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "questionnaireId",
              "in": "path",
              "description": "Questionnaire ID \nExample: Doc123456",
              "required": true,
              "type": "string",
              "default": "Doc123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UpdateAnswerResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found. Specified Questionnaire or Vendor not found",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/InternalServerError"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces": {
        "get": {
          "tags": [
            "Workspaces"
          ],
          "summary": "Fetch Workspaces by SMVendorID",
          "description": "This API will fetch paginated details of workspaces for the given SMVendorID based on the limit configured in the system. Optionally you can pass on additional filter parameters to get only a subset of workspaces/questionnaires. API accepts query param $skip to get the next page response.",
          "operationId": "getWorkspaces",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=5: returns first 5 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 5.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. No offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\n$skip value contains 2 parts. First character represents the type of workspace and following characters represents the actual page token.\nFirst character ranges from 0 to 7 each representing a workspace type as explained below-\n0 - Creation(Supplier Request)\n1 - Registration\n2 - Qualification\n3 - Disqualification\n4 - Preferred\n5 - Segmentation\n6 - QualificationRequest\n7 - Questionnaire(Modular Questionnaire)\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records starting from Creation workspace till a value depending on the $top query parameter value if present else the configured page limit(5).\nscenario 2 - $skip=3 - API will return records starting from Disqualification workspace till a value depending on the $top query parameter value if present else the configured page limit(5).\nscenario 3 - $skip=213 - API will return records starting from Qualification workspace after skipping first 13 records of Qualification workspace till a value depending on the $top query parameter value if present else the configured page limit(5).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ server time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/WorkspacesResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/workspaces/{wid}": {
        "get": {
          "tags": [
            "Workspaces"
          ],
          "summary": "Fetch Workspace by SMVendorID and WorkspaceID",
          "description": "This API will fetch details of workspace for the given SMVendorID and Workspace Id based on the limit configured in the system.",
          "operationId": "getWorkspaceDetails",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "wid",
              "in": "path",
              "description": "Workspace Id of the workspace \nExample: WS123456",
              "required": true,
              "type": "string",
              "default": "WS123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/WorkspaceDetailsResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "422": {
              "description": "Missing or invalid workspace id",
              "schema": {
                "$ref": "#/definitions/WorkspaceNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors": {
        "patch": {
          "tags": [
            "Update Qualification Status"
          ],
          "summary": "Update qualification status or preferred level for vendors.",
          "description": "This API is used to update qualification status or preferred level for a list of vendors.",
          "operationId": "vendorsQualificationStatusPATCH",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "request",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StatusRequest"
              }
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/StatusResponse"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/processes": {
        "get": {
          "tags": [
            "Process Details"
          ],
          "summary": "Fetch list of all processes for the vendor.",
          "description": "This API will fetch list of processes vendor id",
          "operationId": "getProcesses",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "$count",
              "in": "query",
              "description": "When value is true, total count of records will be returned.\nUsage explained as below;\n$count=true: returns total count of records after applying the filters.\n$count=false or no $count is passed: page meta data will not be returned in the response.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "in": "query",
              "description": "Value passed in this query parameter decides the page limit or page size of the current page returned.\nUsage explained as below;\n$top=10: returns first 10 records for that page from the offset ID and value has to be greater than 0 and lesser than or equal to system defined page limit. Here system defined page limit is 100.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$skip",
              "in": "query",
              "description": "offsetId/pageToken for pagination. \nNo offsetId/pageToken is required when the API is invoked for the first time. Response header will contain X-Pagination-Token and response body will contain pageToken if the records are not exhausted.\nUsage explained as below;\nscenario 1 - $skip=0 or not passing any query parameter are both same. API will return page 1 records from start depending on the $top query parameter value if present else the configured page limit(100).\nscenario 2 - $skip=10 - API skips first 10 records and retrieves the successive page records depending on the $top query parameter value if present else the configured page limit(100).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$filter",
              "in": "query",
              "description": "This request parameter takes updatedDateFrom and updatedDateTo parameters in yyyy-MM-ddTHH:mm:ssZ GMT time zone format and returns all records in the range depending on the configured page limit.\nUsage explained as below;\nscenario 1 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z and updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records that fall between this range depending on the configured page limit\nscenario 2 - $filter=updatedDateTo le 2019-10-04T12:20:51Z - retrieves all records from start till the date specified above depending on the configured page limit\nscenario 3 - $filter=updatedDateFrom ge 2018-09-29T12:20:51Z - API throws InvalidParameter Exception as updatedDateTo is a mandatory parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ProcessesResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        }
      },
      "/vendors/{vendorId}/processes/{wid}": {
        "get": {
          "tags": [
            "Process Details"
          ],
          "summary": "Fetches Process Details, decision history.",
          "description": "This API is used to fetch the process details, decision history, questionnaire details for the workspace id, vendor.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "wid",
              "in": "path",
              "description": "Workspace Id of the workspace \nExample: WS123456",
              "required": true,
              "type": "string",
              "default": "WS123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ProcessDetailsResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "420": {
              "description": "Vendor not found",
              "schema": {
                "$ref": "#/definitions/VendorNotFound"
              }
            },
            "422": {
              "description": "Invalid or missing workspace id",
              "schema": {
                "$ref": "#/definitions/WorkspaceNotFound"
              }
            },
            "423": {
              "description": "Invalid Parameter",
              "schema": {
                "$ref": "#/definitions/InvalidParameter"
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Process Details"
          ],
          "summary": "Cancels the process for that vendor and workspaceId.",
          "description": "API to cancel the in progress processes which are created through UI, API and CSV data import. ",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "vendorId",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string",
              "default": "S123456"
            },
            {
              "name": "wid",
              "in": "path",
              "description": "Workspace Id of the workspace \nExample: WS123456",
              "required": true,
              "type": "string",
              "default": "WS123456"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            },
            {
              "name": "request",
              "in": "body",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CancelProcessRequest"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "ACCEPTED",
              "schema": {
                "$ref": "#/definitions/SuccessResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found.",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            }
          }
        }
      },
      "/processes/processTypes": {
        "get": {
          "tags": [
            "Bulk Process Creation"
          ],
          "summary": "Get list of process types",
          "description": "API to fetch the available list of process types configured for a realm",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ProcessTypeResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found.",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            }
          }
        }
      },
      "/processes/{processType}/templates": {
        "get": {
          "tags": [
            "Bulk Process Creation"
          ],
          "summary": "Get Intake form",
          "description": "API to fetch the intake form for a process type",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "processType",
              "in": "path",
              "description": "SMVendorID of the vendor \nExample: S123456",
              "required": true,
              "type": "string"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/IntakeFormResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found.",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            }
          }
        }
      },
      "/processes/modularQuestionnairesRequests": {
        "post": {
          "tags": [
            "Bulk Process Creation"
          ],
          "summary": "Get list of Modular questionnaire templates",
          "description": "API to get a list of all the modular questionnaire templates for a process type",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "request",
              "in": "body",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/QuestionnaireTemplateRequest"
              }
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/QuestionnaireTemplateResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found.",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            }
          }
        }
      },
      "/processes/processCreateRequests": {
        "post": {
          "tags": [
            "Bulk Process Creation"
          ],
          "summary": "Create a process for multiple suppliers at a time",
          "description": "API that submits an async job which in turn creates a process for multiple suppliers at a time",
          "operationId": "startsupplierprocess",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "request",
              "in": "body",
              "description": "request",
              "required": true,
              "schema": {
                "$ref": "#/definitions/BulkProcessCreateRequests"
              }
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/BulkProcessCreateResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found.",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            }
          }
        }
      },
      "/jobs/{jobId}": {
        "get": {
          "tags": [
            "Bulk Process Creation"
          ],
          "summary": "Fetches details of a particular bulk process trigger job",
          "description": "API to fetch the details of Bulk process job like matrix, suppliers, created time stamp and initiator details.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "jobId",
              "in": "path",
              "description": "This parameter specifies job id for which the job details has to be fetched\nExample: abcd12345abcd",
              "required": true,
              "type": "string",
              "default": "PROC1234"
            },
            {
              "name": "realm",
              "in": "query",
              "description": "This parameter specifies one of the realm names for which the client application is authenticated and provides access to the data in that realm \nExample: testRealm",
              "required": true,
              "type": "string",
              "default": "testRealm"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/JobDetailsResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/BadRequest"
              }
            },
            "401": {
              "description": "Unauthorized Request or Invalid/Missing realm parameter. Usage\\:?realm=",
              "schema": {
                "$ref": "#/definitions/Unauthorized"
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/Forbidden"
              }
            },
            "404": {
              "description": "Not Found.",
              "schema": {
                "$ref": "#/definitions/NotFound"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "href": {
                  "type": "string"
                },
                "rel": {
                  "type": "string"
                },
                "templated": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "VendorNotFound": {
        "type": "object",
        "example": {
          "status": "Not Found",
          "timestamp": 52672829,
          "message": "Vendor Not Found",
          "debugMessage": "",
          "statusCode": 420
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Not Found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Vendor Not Found"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "420"
          }
        }
      },
      "ResourceNotFound": {
        "type": "object",
        "example": {
          "status": "Not Found",
          "timestamp": 52672829,
          "message": "Vendor Not Found",
          "debugMessage": "",
          "statusCode": 420
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Not Found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Not Found"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "420 - Vendor Not Found \n 421 - Document Not Found \n 433 - Scores Not Found"
          }
        }
      },
      "QuestionnaireNotFound": {
        "type": "object",
        "example": {
          "status": "Not Found",
          "timestamp": 52672829,
          "message": "Questionnaire Not Found",
          "debugMessage": "",
          "statusCode": 421
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Not Found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Questionnaire Not Found"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "421"
          }
        }
      },
      "WorkspaceNotFound": {
        "type": "object",
        "example": {
          "status": "Not Found",
          "timestamp": 52672829,
          "message": "Missing or Invalid Workspace Id",
          "debugMessage": "",
          "statusCode": 422
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Not Found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Missing or Invalid Workspace Id"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "422"
          }
        }
      },
      "LimitExceed": {
        "type": "object",
        "example": {
          "status": "Bad request",
          "timestamp": 52672829,
          "message": "You have entered 105 vendors. Reduce the number so as not to exceed the maximum allowed limit of 100",
          "debugMessage": "",
          "statusCode": 434
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Not Found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "You have entered 105 vendors. Reduce the number so as not to exceed the maximum allowed limit of 100"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "434"
          }
        }
      },
      "InvalidParameter": {
        "type": "object",
        "example": {
          "status": "Bad request",
          "timestamp": 52672829,
          "message": "Invalid Parameter",
          "debugMessage": "",
          "statusCode": 423
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Bad Request"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Invalid Parameter"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "423"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "example": {
          "status": "Unauthorized",
          "timestamp": 52672829,
          "message": "Unauthorized Request or Invalid/Missing realm parameter. Usage:?realm=",
          "debugMessage": "",
          "statusCode": 401
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Unauthorized"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Unauthorized"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "401"
          }
        }
      },
      "Forbidden": {
        "type": "object",
        "example": {
          "status": "Forbidden",
          "timestamp": 52672829,
          "message": "Forbidden",
          "debugMessage": "",
          "statusCode": 403
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Forbidden"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Forbidden"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "403"
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "example": {
          "status": "Bad request",
          "timestamp": 52672829,
          "message": "Bad request",
          "debugMessage": "",
          "statusCode": 400
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Bad Request"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Bad Request"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "400"
          }
        }
      },
      "ScoresBadRequest": {
        "type": "object",
        "example": {
          "status": "Bad request",
          "timestamp": 52672829,
          "message": "Bad request",
          "debugMessage": "",
          "statusCode": 400
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Bad Request"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Bad Request"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "400 - Questionnaire Not Graded"
          }
        }
      },
      "NotFound": {
        "type": "object",
        "example": {
          "status": "Not Found. Specified Questionnaire or Vendor not found",
          "timestamp": 52672829,
          "message": "Not Found. Specified Questionnaire or Vendor not found",
          "debugMessage": "",
          "statusCode": 404
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Not Found. Specified Questionnaire or Vendor not found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Not Found. Specified Questionnaire or Vendor not found"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "404"
          }
        }
      },
      "VersionNotFound": {
        "type": "object",
        "example": {
          "status": "Version Not Found",
          "timestamp": 52672829,
          "message": "Version Not Found",
          "debugMessage": "",
          "statusCode": 431
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Version Not found"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Version Not Found"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "431"
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "example": {
          "status": "Internal Server Error",
          "timestamp": 52672829,
          "message": "Internal Server Error",
          "debugMessage": "",
          "statusCode": 500
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Internal Server Error"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Internal Server Error"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "500"
          }
        }
      },
      "ReportRequest": {
        "properties": {
          "smVendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "S123456",
              "S234567"
            ]
          },
          "erpVendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "9877234512",
              "7611988834"
            ]
          },
          "businessUnitList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "408",
              "1000"
            ]
          },
          "categoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "51",
              "71"
            ]
          },
          "outputFormat": {
            "type": "string",
            "enum": [
              "CSV",
              "JSON"
            ],
            "example": "JSON"
          },
          "preferredLevelList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "example": [
              0,
              1,
              2,
              4,
              5
            ]
          },
          "qualificationStatusList": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QualificationRejected",
                "Disqualified",
                "InDisqualification",
                "PendingDisqualificationApproval",
                "QualificationExpired",
                "NotQualified",
                "QualificationStarted",
                "InQualification",
                "PendingQualificationApproval",
                "PendingQualificationResubmit",
                "QualificationRestricted",
                "QualifiedForSome",
                "QualifiedWithException",
                "Qualified",
                "Unknown",
                "None"
              ]
            },
            "example": [
              "Qualified",
              "QualificationStarted",
              "InQualification"
            ]
          },
          "regionList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "USA",
              "INDIA"
            ]
          },
          "registrationStatusList": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RegistrationDenied",
                "PhasedOut",
                "InCreation",
                "InExternalApprovalForCreation",
                "NotInvited",
                "Invited",
                "InRegistration",
                "PendingApproval",
                "PendingResubmit",
                "Registered",
                "Unknown"
              ]
            },
            "example": [
              "Registered",
              "InRegistration"
            ]
          },
          "withQuestionnaire": {
            "type": "boolean"
          },
          "withGenericCustomFields": {
            "type": "boolean"
          },
          "withBankDetail": {
            "type": "boolean"
          },
          "withTaxDetail": {
            "type": "boolean"
          },
          "withCompanyCodeDetail": {
            "type": "boolean"
          },
          "withDisqualifications": {
            "type": "boolean"
          }
        }
      },
      "VendorContactRequest": {
        "properties": {
          "smVendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "S123456",
              "S234567"
            ]
          },
          "erpVendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "9233156129",
              "9778411821"
            ]
          },
          "acmIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ACM_276",
              "ACM_449"
            ]
          }
        }
      },
      "InactiVendorRequest": {
        "properties": {
          "smVendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "S123456",
              "S234567"
            ]
          },
          "erpVendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "9233156129",
              "9778411821"
            ]
          }
        }
      },
      "SMProjectHeaderUpdateRequest": {
        "title": "Update Project Header Fields Request",
        "example": {
          "regionIds": [
            "Region1",
            "Region2"
          ],
          "materialIds": [
            "Material123"
          ]
        },
        "properties": {
          "materialIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SubmitSurveyRequest": {
        "title": "Update Questionnaire Answers Request",
        "example": {
          "answers": [
            {
              "externalSystemCorrelationId": "KI_9951113",
              "answer": "simpleAnswer"
            },
            {
              "externalSystemCorrelationId": "KI_9951112",
              "answer": "alternativeAnswer0",
              "alternative": "0"
            },
            {
              "externalSystemCorrelationId": "KI_9951112",
              "answer": "alternativeAnswer1",
              "alternative": "1"
            },
            {
              "externalSystemCorrelationId": "KI_9951114",
              "extendedAddressAnswer": {
                "default": {
                  "countryCode": "IN",
                  "regionCode": "03",
                  "buildingID": "",
                  "roomID": "",
                  "floorID": "",
                  "careOfName": "",
                  "streetPrefixName": "streett2",
                  "additionalStreetPrefixName": "streett3",
                  "streetName": "farm road",
                  "houseID": "75",
                  "additionalHouseID": "",
                  "streetSuffixName": "",
                  "additionalStreetSuffixName": "",
                  "districtName": "beng",
                  "additionalCityName": "",
                  "streetPostalCode": "560061",
                  "cityName": "beng",
                  "streetAddressMailNonDeliveryReasonCode": "",
                  "timeZoneCode": "",
                  "taxJurisdictionCode": "",
                  "transportationZoneID": "",
                  "companyPostalCode": "",
                  "regionalStructureElementGroupCode": "",
                  "regionalStructureAddressConsistencyStatusCode": "",
                  "regionalStructureCityCode": "",
                  "additionalRegionalStructureCityCode": "",
                  "regionalStructureDistrictCode": "",
                  "regionalStructureStreetCode": "",
                  "poBoxPostalCode": "",
                  "poBoxDeviatingCityName": "",
                  "poBoxLobbyName": "",
                  "poBoxID": "",
                  "poBoxAddressMailNonDeliveryReasonCode": "",
                  "poBoxIDVisibleIndicator": false,
                  "poBoxDeliveryServiceID": "",
                  "poBoxDeliveryServiceTypeCode": "",
                  "poBoxDeviatingRegionalStructureCityCode": ""
                }
              }
            },
            {
              "externalSystemCorrelationId": "KI_9951115",
              "bankAccountAnswer": {
                "name": "SBI",
                "key": "11",
                "id": "0000",
                "state": "KA",
                "country": "IN",
                "line1": "MG Road",
                "bankName": "SBI",
                "city": "Bangalore",
                "postalCode": "560001",
                "validationErrorsList": [],
                "collectionAuthorisationIndicator": false,
                "bankBranch": "Koramangala",
                "accountName": "Jagadeesh",
                "accountNumber": "22",
                "bankAccountExternalID": "44",
                "bankAccountType": "Savings",
                "controlKey": "",
                "bankAccountStandardID": "33"
              }
            },
            {
              "externalSystemCorrelationId": "KI_9951116",
              "certificateAnswer": {
                "certified": true,
                "objId": "AAb0Ae2gI+ZmR",
                "id": "9406194",
                "externalSystemCorrelationId": "KI_9951116",
                "certificateType": "Certificate",
                "issuer": "SAP",
                "yearOfPublication": "2020",
                "certificateNumber": "2020",
                "certificateLocation": "Banagalore",
                "effectiveDate": "10/8/2020",
                "expirationDate": "10/31/2020",
                "attachment": {
                  "id": "Doc14820427,AAb0Ae2gI+ZmR,AAb0AH4gI+ZmS",
                  "fileName": "result (2).csv",
                  "mimeType": "text/csv",
                  "fileSize": 163
                },
                "workspaceId": "WS14819322",
                "workspaceType": "SupplierRegistration",
                "docId": "Doc14820427",
                "uniqueName": "",
                "createMode": false
              }
            },
            {
              "externalSystemCorrelationId": "KI_9951118",
              "addressAnswer": {
                "street": "HSR",
                "city": "Bangalore",
                "state": "KA",
                "postalCode": "560001",
                "countryCode": "IN"
              }
            },
            {
              "externalSystemCorrelationId": "KI_9951119",
              "itemId": "9406198",
              "taxDataAnswer": {
                "answers": [
                  {
                    "itemId": "9406198.0",
                    "sliceVersion": 0,
                    "sliceIncarnationVersion": 0,
                    "answer": "IN",
                    "itemTag": "CountryCode"
                  },
                  {
                    "itemId": "9406198.1",
                    "sliceVersion": 0,
                    "sliceIncarnationVersion": 0,
                    "itemTag": "TaxNumberDetailTable"
                  },
                  {
                    "itemId": "9406198.1.0",
                    "alternative": "0",
                    "sliceVersion": 0,
                    "sliceIncarnationVersion": 0,
                    "answer": "India: Tax Identification Number (TIN)",
                    "itemTag": "TaxName",
                    "moreValue": "taxCode=01"
                  },
                  {
                    "itemId": "9406198.1.1",
                    "alternative": "0",
                    "sliceVersion": 0,
                    "sliceIncarnationVersion": 0,
                    "answer": "Organization",
                    "itemTag": "TaxType"
                  },
                  {
                    "itemId": "9406198.1.2",
                    "alternative": "0",
                    "sliceVersion": 0,
                    "sliceIncarnationVersion": 0,
                    "answer": "123",
                    "itemTag": "TaxNumber"
                  }
                ]
              }
            },
            {
              "externalSystemCorrelationId": "KI_9951111",
              "multiValueAnswer": [
                "US",
                "IN",
                "CA"
              ]
            }
          ],
          "triggerApprove": true
        },
        "properties": {
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ItemAnswer"
            }
          },
          "triggerApprove": {
            "type": "boolean"
          }
        }
      },
      "ItemAnswer": {
        "title": "Questionnaire Answer Object",
        "properties": {
          "externalSystemCorrelationId": {
            "type": "string",
            "description": "Unique ID of the question"
          },
          "alternative": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "multiValueAnswer": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addressAnswer": {
            "$ref": "#/definitions/AddressData"
          },
          "attachmentAnswer": {
            "$ref": "#/definitions/AttachmentData"
          },
          "bankAccountAnswer": {
            "$ref": "#/definitions/BankAccountData"
          },
          "certificateAnswer": {
            "$ref": "#/definitions/CertificateData"
          },
          "extendedAddressAnswer": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ExtendedAddressRepData"
            }
          },
          "taxDataAnswer": {
            "$ref": "#/definitions/TaxData"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CommentData"
            }
          },
          "itemTag": {
            "type": "string"
          },
          "moreValue": {
            "type": "string"
          }
        }
      },
      "TaxItemAnswer": {
        "title": "Tax Answer Object",
        "properties": {
          "itemId": {
            "type": "string",
            "description": "Unique ID of the question"
          },
          "alternative": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "itemTag": {
            "type": "string"
          },
          "moreValue": {
            "type": "string"
          }
        }
      },
      "TaxData": {
        "properties": {
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaxItemAnswer"
            }
          }
        }
      },
      "ExtendedAddressRepData": {
        "properties": {
          "additionalCityName": {
            "type": "string"
          },
          "additionalHouseID": {
            "type": "string"
          },
          "additionalRegionalStructureCityCode": {
            "type": "string"
          },
          "additionalStreetPrefixName": {
            "type": "string"
          },
          "additionalStreetSuffixName": {
            "type": "string"
          },
          "blank": {
            "type": "boolean"
          },
          "buildingID": {
            "type": "string"
          },
          "careOfName": {
            "type": "string"
          },
          "cityName": {
            "type": "string"
          },
          "companyPostalCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "districtName": {
            "type": "string"
          },
          "floorID": {
            "type": "string"
          },
          "houseID": {
            "type": "string"
          },
          "poBoxAddressMailNonDeliveryReasonCode": {
            "type": "string"
          },
          "poBoxDeliveryServiceID": {
            "type": "string"
          },
          "poBoxDeliveryServiceTypeCode": {
            "type": "string"
          },
          "poBoxDeviatingCityName": {
            "type": "string"
          },
          "poBoxDeviatingCountryCode": {
            "type": "string"
          },
          "poBoxDeviatingRegionCode": {
            "type": "string"
          },
          "poBoxDeviatingRegionalStructureCityCode": {
            "type": "string"
          },
          "poBoxID": {
            "type": "string"
          },
          "poBoxIDVisibleIndicator": {
            "type": "boolean"
          },
          "poBoxLobbyName": {
            "type": "string"
          },
          "poBoxPostalCode": {
            "type": "string"
          },
          "regionCode": {
            "type": "string"
          },
          "regionalStructureAddressConsistencyStatusCode": {
            "type": "string"
          },
          "regionalStructureCityCode": {
            "type": "string"
          },
          "regionalStructureDistrictCode": {
            "type": "string"
          },
          "regionalStructureElementGroupCode": {
            "type": "string"
          },
          "regionalStructureStreetCode": {
            "type": "string"
          },
          "roomID": {
            "type": "string"
          },
          "streetAddressMailNonDeliveryReasonCode": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "streetPostalCode": {
            "type": "string"
          },
          "streetPrefixName": {
            "type": "string"
          },
          "streetSuffixName": {
            "type": "string"
          },
          "taxJurisdictionCode": {
            "type": "string"
          },
          "timeZoneCode": {
            "type": "string"
          },
          "transportationZoneID": {
            "type": "string"
          }
        }
      },
      "CommentData": {
        "properties": {
          "attachment": {
            "$ref": "#/definitions/AttachmentData"
          },
          "comment": {
            "type": "string"
          },
          "isEdit": {
            "type": "boolean"
          }
        }
      },
      "AttachmentData": {
        "properties": {
          "comment": {
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "fileContents": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "mimeType": {
            "type": "string"
          }
        }
      },
      "BankAccountData": {
        "properties": {
          "accountName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "bankAccountExternalID": {
            "type": "string"
          },
          "bankAccountStandardID": {
            "type": "string"
          },
          "bankAccountType": {
            "type": "string"
          },
          "bankBranch": {
            "type": "string"
          },
          "blank": {
            "type": "boolean"
          },
          "city": {
            "type": "string"
          },
          "collectionAuthorisationIndicator": {
            "type": "boolean"
          },
          "country": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "line1": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "CertificateData": {
        "properties": {
          "attachment": {
            "$ref": "#/definitions/AttachmentData"
          },
          "certificateLocation": {
            "type": "string"
          },
          "certificateNumber": {
            "type": "string"
          },
          "certificateType": {
            "type": "string"
          },
          "certified": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "yearOfPublication": {
            "type": "string"
          }
        }
      },
      "AddressData": {
        "properties": {
          "city": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "line3": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "street": {
            "type": "string"
          }
        }
      },
      "ReportRequestResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "Supplier Name": {
              "type": "string",
              "example": "Maxstar Universal Transport Corporation"
            },
            "ERP Vendor ID": {
              "type": "string",
              "example": 9234167123
            },
            "SM Vendor ID": {
              "type": "string",
              "example": "S1662521"
            },
            "An Id": {
              "type": "string",
              "example": "AN13000000169"
            },
            "ACM ID": {
              "type": "string",
              "example": "ACM_142"
            },
            "Registration Status": {
              "type": "string",
              "example": "Registered"
            },
            "Qualification Status": {
              "type": "string",
              "example": "Qualified"
            },
            "Integrated to ERP": {
              "type": "string",
              "example": "Integrated"
            },
            "Duplicate SM Vendor Id": {
              "type": "string",
              "example": "S2234567"
            },
            "Last Integration State": {
              "type": "string",
              "example": "Integrated"
            },
            "Last Confirmation State": {
              "type": "string",
              "example": "Normal"
            },
            "Source System": {
              "type": "string",
              "example": "SAP"
            },
            "Master Vendor Id": {
              "type": "string",
              "example": 9234167123
            },
            "Form of Address Code": {
              "type": "string",
              "example": "B1"
            },
            "name2": {
              "type": "string",
              "example": "Universal"
            },
            "name3": {
              "type": "string",
              "example": "Transport"
            },
            "name4": {
              "type": "string",
              "example": "Corporation"
            },
            "Duns Id": {
              "type": "string",
              "example": 316268655
            },
            "Industry Code": {
              "type": "string",
              "example": "A024"
            },
            "Record Created Date": {
              "type": "string",
              "example": 1692781635247
            },
            "Creator": {
              "type": "string",
              "example": "Max Orlando"
            },
            "Blocked Status": {
              "type": "string",
              "example": "NotBlocked"
            },
            "Last Review Date": {
              "type": "string",
              "example": 1692781639241
            },
            "Last Update Date": {
              "type": "string",
              "example": 1692782089098
            },
            "Last Status Change Date": {
              "type": "string",
              "example": 1692782064224
            },
            "Primary Supplier Manager": {
              "type": "string",
              "example": "jack@xyz.com"
            },
            "Relationship Established Type": {
              "type": "string",
              "example": "Sourcing"
            },
            "Alternate Supplier Manager": {
              "type": "string",
              "example": "max@xyz.com"
            },
            "Approved": {
              "type": "boolean",
              "example": true
            },
            "Transactional Supplier": {
              "type": "boolean",
              "example": false
            },
            "Transactional Supplier Request Status": {
              "type": "boolean",
              "example": true
            },
            "Main Vendor Type": {
              "type": "boolean",
              "example": true
            },
            "Address - Line1": {
              "type": "string",
              "example": "1501 N Walton Walker Blvd"
            },
            "Address - Line2": {
              "type": "string",
              "example": "street no 123"
            },
            "Address - Line3": {
              "type": "string",
              "example": "MG Road"
            },
            "Address - PO Box": {
              "type": "string",
              "example": "Dallas"
            },
            "Address - City": {
              "type": "string",
              "example": "Dallas"
            },
            "Address - Country Code": {
              "type": "string",
              "example": "US"
            },
            "Address - Region Code": {
              "type": "string",
              "example": "BW"
            },
            "Address - Postal Code": {
              "type": "string",
              "example": "560067"
            },
            "Primary contact first name": {
              "type": "string",
              "example": "Emma"
            },
            "Primary contact middle name": {
              "type": "string",
              "example": "Marie"
            },
            "Primary contact last name": {
              "type": "string",
              "example": "Clarkson"
            },
            "Primary contact email": {
              "type": "string",
              "example": "emma.marie@sap.com"
            },
            "isActive": {
              "type": "boolean",
              "example": true
            },
            "qualifications": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Qualification Status": {
                    "type": "string",
                    "example": "PendingQualificationApproval"
                  },
                  "Preferred Status": {
                    "type": "string",
                    "example": 2
                  },
                  "Category": {
                    "type": "string",
                    "example": 5313
                  },
                  "Region": {
                    "type": "string",
                    "example": "AK"
                  },
                  "Business Unit": {
                    "type": "string",
                    "example": 100
                  },
                  "Material ID": {
                    "type": "string",
                    "example": 100483
                  },
                  "Process Type": {
                    "type": "string",
                    "example": "Audit Process"
                  }
                }
              }
            },
            "questionnaires": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "questionnaireId": {
                    "type": "string",
                    "example": "Doc4006413599"
                  },
                  "questionnaireTitle": {
                    "type": "string",
                    "example": "Supplier request form"
                  },
                  "workspaceType": {
                    "type": "string",
                    "example": "SUPPLIER_REQUEST"
                  },
                  "workspaceId": {
                    "type": "string",
                    "example": "WS4006413596"
                  },
                  "matrixInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "example": "Registered"
                        },
                        "Category": {
                          "type": "string",
                          "example": 53
                        },
                        "Business Unit": {
                          "type": "string",
                          "example": 100
                        },
                        "Region": {
                          "type": "string",
                          "example": "AL"
                        },
                        "Material ID": {
                          "type": "string",
                          "example": "Material 1"
                        },
                        "Process Type": {
                          "type": "string",
                          "example": "Audit Process"
                        }
                      }
                    }
                  }
                }
              }
            },
            "bankInfos": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountName": {
                    "type": "string",
                    "example": "Ahname"
                  },
                  "accountNumber": {
                    "type": "string",
                    "example": 43545513
                  },
                  "bankAccountExternalID": {
                    "type": "string",
                    "example": 57744
                  },
                  "bankAccountStandardID": {
                    "type": "string",
                    "example": 987542
                  },
                  "bankInternalID": {
                    "type": "string",
                    "example": 123456
                  },
                  "bankAccountType": {
                    "type": "string",
                    "example": "Saving"
                  },
                  "bankBranch": {
                    "type": "string",
                    "example": "Texas"
                  },
                  "controlKey": {
                    "type": "string",
                    "example": 134
                  },
                  "country": {
                    "type": "string",
                    "example": "US"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "example": "600B Hill Road"
                      },
                      "line2": {
                        "type": "string",
                        "example": "Apt 33"
                      },
                      "line3": {
                        "type": "string",
                        "example": "Palo Alto"
                      },
                      "poBox": {
                        "type": "string",
                        "example": 1105
                      },
                      "city": {
                        "type": "string",
                        "example": "Palo Alto"
                      },
                      "countryCode": {
                        "type": "string",
                        "example": "US"
                      },
                      "region": {
                        "type": "string",
                        "example": "DN"
                      },
                      "postalCode": {
                        "type": "string",
                        "example": 35015
                      }
                    }
                  }
                }
              }
            },
            "taxInfos": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "countryCode": {
                    "type": "string",
                    "example": "US"
                  },
                  "partyTaxID": {
                    "type": "string",
                    "example": "US123456712"
                  },
                  "taxIdentificationNumberTypeCode": {
                    "type": "string",
                    "example": 1
                  },
                  "longPartyTaxID": {
                    "type": "string",
                    "example": "US1234567122"
                  }
                }
              }
            },
            "companyCodes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "companyCode": {
                    "type": "string",
                    "example": "C030"
                  },
                  "paymentMethodsCode": {
                    "type": "string",
                    "example": "WDC"
                  },
                  "planningGroupCode": {
                    "type": "string",
                    "example": 8765
                  },
                  "cashDiscountTermsCode": {
                    "type": "string",
                    "example": "BR"
                  },
                  "generalLedgerAccountReferenceID": {
                    "type": "string",
                    "example": 221200030
                  },
                  "withholdingTaxs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subjectToWithholdingTaxIndicator": {
                          "type": "string",
                          "example": true
                        },
                        "withholdingTaxCode": {
                          "type": "string",
                          "example": "T900"
                        },
                        "withholdingTaxTypeCode": {
                          "type": "string",
                          "example": "W030"
                        }
                      }
                    }
                  }
                }
              }
            },
            "genericCustomFields": {
              "type": "object",
              "properties": {
                "supplierGenericCustomField": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "ZZECCID"
                      },
                      "content": {
                        "type": "string",
                        "example": 90147313
                      },
                      "active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                },
                "businessPartnerGenericCustomField": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "businessPartner-gcf-name1"
                      },
                      "content": {
                        "type": "string",
                        "example": "businessPartner-gcf-value1"
                      },
                      "active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                },
                "companyCodeGenericCustomField": {
                  "type": "object",
                  "properties": {
                    "[object Object]": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "CountryName"
                          },
                          "content": {
                            "type": "string",
                            "example": "US"
                          },
                          "active": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                },
                "bankInfoGenericCustomField": {
                  "type": "object",
                  "properties": {
                    "[object Object]": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "CurrencyCode"
                          },
                          "content": {
                            "type": "string",
                            "example": "USD"
                          },
                          "active": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "InactiveVendorResponse": {
        "properties": {
          "vendorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "supplierName": {
                  "type": "string",
                  "example": "Macwell"
                },
                "name2": {
                  "type": "string",
                  "example": "Industrial"
                },
                "name3": {
                  "type": "string",
                  "example": "Transport"
                },
                "name4": {
                  "type": "string",
                  "example": "Corporation"
                },
                "erpVendorId": {
                  "type": "string",
                  "example": 913348712
                },
                "smVendorId": {
                  "type": "string",
                  "example": "S321288234"
                },
                "anId": {
                  "type": "string",
                  "example": "AN61176424532"
                },
                "acmId": {
                  "type": "string",
                  "example": "ACM_2234"
                },
                "registrationStatus": {
                  "type": "string",
                  "example": "Registered"
                },
                "qualificationStatus": {
                  "type": "string",
                  "example": "Qualified"
                },
                "erpIntStatus": {
                  "type": "string",
                  "example": "Integrated"
                },
                "timeUpdated": {
                  "type": "integer",
                  "example": 1624296064450
                },
                "timeCreated": {
                  "type": "integer",
                  "example": 1624296064412
                }
              }
            }
          }
        }
      },
      "VendorContactResponse": {
        "properties": {
          "vendorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "supplierName": {
                  "type": "string",
                  "example": "Mac Well corporation"
                },
                "erpVendorId": {
                  "type": "string",
                  "example": 913348712
                },
                "smVendorId": {
                  "type": "string",
                  "example": "S321288234"
                },
                "anId": {
                  "type": "string",
                  "example": "AN61176424532"
                },
                "acmId": {
                  "type": "string",
                  "example": "ACM_2234"
                },
                "contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "Johny"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Orlando"
                      },
                      "middleName": {
                        "type": "string",
                        "example": "Max"
                      },
                      "email": {
                        "type": "string",
                        "example": "johny.m@sap.com"
                      },
                      "telephone": {
                        "type": "string",
                        "example": 802134512
                      },
                      "title": {
                        "type": "string",
                        "example": "Johny Comp"
                      },
                      "aodObjectId": {
                        "type": "string",
                        "example": 44213467
                      },
                      "categories": {
                        "type": "string",
                        "example": null
                      },
                      "mobilePhone": {
                        "type": "string",
                        "example": 9538089233
                      },
                      "regions": {
                        "type": "string",
                        "example": null
                      },
                      "s4UniqueName": {
                        "type": "string",
                        "example": "johny.m@sap.com"
                      },
                      "type": {
                        "type": "string",
                        "example": "Sales"
                      },
                      "locale": {
                        "type": "string",
                        "example": "en_US"
                      },
                      "timeZoneId": {
                        "type": "string",
                        "example": "US/Pacific"
                      },
                      "departments": {
                        "type": "string",
                        "example": 1
                      },
                      "mobileCountryName": {
                        "type": "string",
                        "example": "US"
                      },
                      "telephoneCountryName": {
                        "type": "string",
                        "example": "US"
                      },
                      "role": {
                        "type": "string",
                        "example": "Supervisor"
                      },
                      "timeUpdated": {
                        "type": "integer",
                        "example": 1624296064450
                      },
                      "timeCreated": {
                        "type": "integer",
                        "example": 1624296064412
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "example": true
                      },
                      "isActive": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "WorkspacesResponse": {
        "type": "object",
        "properties": {
          "vendorInfo": {
            "type": "object",
            "properties": {
              "smVendorId": {
                "type": "string"
              },
              "erpVendorId": {
                "type": "string"
              },
              "anId": {
                "type": "string"
              },
              "acmId": {
                "type": "string"
              }
            }
          },
          "workspaces": {
            "type": "object",
            "properties": {
              "SupplierRequest": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "requester": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Registration": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "requester": {
                      "type": "string"
                    },
                    "invitationCount": {
                      "type": "string"
                    },
                    "updateStatus": {
                      "type": "string"
                    },
                    "legacy": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Qualification": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "canDisqualify": {
                      "type": "boolean"
                    },
                    "isExpired": {
                      "type": "boolean"
                    },
                    "isRequalificationEligible": {
                      "type": "boolean"
                    },
                    "statusQualifier": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Disqualification": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "canRequalify": {
                      "type": "string"
                    },
                    "preferredFilterList": {
                      "type": "string"
                    },
                    "approvalStatus": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Preferred": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "levelName": {
                      "type": "string"
                    },
                    "pendingLevel": {
                      "type": "string"
                    },
                    "pendingLevelName": {
                      "type": "string"
                    },
                    "autoQualify": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Segmentation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "approvalStatus": {
                      "type": "string"
                    },
                    "pendingLevel": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "QualificationRequest": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ModularQuestionnaire": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "hasBeenCompleted": {
                      "type": "string"
                    },
                    "shouldReuse": {
                      "type": "string"
                    },
                    "shouldShowOnProfile": {
                      "type": "string"
                    },
                    "shouldKeepOpen": {
                      "type": "string"
                    },
                    "isExpiry": {
                      "type": "string"
                    },
                    "hasCertificates": {
                      "type": "string"
                    },
                    "isInternal": {
                      "type": "string"
                    },
                    "isRequired": {
                      "type": "string"
                    },
                    "questionnaireUpdatedDate": {
                      "type": "string"
                    },
                    "isDirectMaterialApplicable": {
                      "type": "string"
                    },
                    "templateId": {
                      "type": "string"
                    },
                    "evaluationType": {
                      "type": "string"
                    },
                    "scoreCard": {
                      "type": "string"
                    },
                    "erpVendorId": {
                      "type": "string"
                    },
                    "sourceSystem": {
                      "type": "string"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "nextStatusId": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "reprocessDate": {
                      "type": "string"
                    },
                    "statusUpdatedDate": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "newStatusId": {
                      "type": "string"
                    },
                    "filterPaths": {
                      "type": "string"
                    },
                    "workspaceExtInfo": {
                      "type": "string"
                    },
                    "autoApproval": {
                      "type": "string"
                    },
                    "archivedStatusId": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    },
                    "matrixInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Category": {
                            "type": "string"
                          },
                          "Business Unit": {
                            "type": "string"
                          },
                          "Region": {
                            "type": "string"
                          },
                          "Material ID": {
                            "type": "string"
                          },
                          "Process Type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "questionnaires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionnaireId": {
                            "type": "string"
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rel": {
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                }
              }
            }
          },
          "pageToken": {
            "type": "string"
          },
          "count": {
            "type": "string"
          }
        }
      },
      "WorkspaceDetailsResponse": {
        "type": "object",
        "properties": {
          "vendorInfo": {
            "type": "object",
            "properties": {
              "smVendorId": {
                "type": "string"
              },
              "erpVendorId": {
                "type": "string"
              },
              "anId": {
                "type": "string"
              },
              "acmId": {
                "type": "string"
              }
            }
          },
          "workspaceId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "smVendorId": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "erpVendorId": {
            "type": "string"
          },
          "sourceSystem": {
            "type": "string"
          },
          "nextStatusId": {
            "type": "string"
          },
          "processId": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "vendorName": {
            "type": "string"
          },
          "approver": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "reprocessDate": {
            "type": "string"
          },
          "statusUpdatedDate": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "newStatusId": {
            "type": "string"
          },
          "filterPaths": {
            "type": "string"
          },
          "workspaceExtInfo": {
            "type": "string"
          },
          "autoApproval": {
            "type": "string"
          },
          "archivedStatusId": {
            "type": "string"
          },
          "rootId": {
            "type": "string"
          },
          "timeUpdated": {
            "type": "string"
          },
          "matrixInfo": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Category": {
                  "type": "string"
                },
                "Business Unit": {
                  "type": "string"
                },
                "Region": {
                  "type": "string"
                },
                "Material ID": {
                  "type": "string"
                },
                "Process Type": {
                  "type": "string"
                }
              }
            }
          },
          "questionnaires": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "questionnaireId": {
                  "type": "string"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rel": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "QuestionnairesForVendorResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "questionnaireList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "questionnaire": {
                      "type": "object",
                      "properties": {
                        "workspaceId": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "questionnaireId": {
                          "type": "string"
                        },
                        "docTitle": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "hasBeenCompleted": {
                          "type": "string"
                        },
                        "shouldReuse": {
                          "type": "string"
                        },
                        "shouldShowOnProfile": {
                          "type": "string"
                        },
                        "shouldKeepOpen": {
                          "type": "string"
                        },
                        "isExpiry": {
                          "type": "string"
                        },
                        "hasCertificates": {
                          "type": "string"
                        },
                        "isInternal": {
                          "type": "string"
                        },
                        "isRequired": {
                          "type": "string"
                        },
                        "questionnaireUpdatedDate": {
                          "type": "string"
                        },
                        "isDirectMaterialApplicable": {
                          "type": "string"
                        },
                        "templateId": {
                          "type": "string"
                        },
                        "evaluationType": {
                          "type": "string"
                        },
                        "scoreCard": {
                          "type": "object",
                          "properties": {
                            "totalScore": {
                              "type": "number"
                            },
                            "scoreCardStatus": {
                              "type": "string"
                            },
                            "scoreDate": {
                              "type": "string"
                            },
                            "scoredBy": {
                              "type": "string"
                            },
                            "scoredOnBehalfOf": {
                              "type": "string"
                            },
                            "fromDate": {
                              "type": "string"
                            },
                            "toDate": {
                              "type": "string"
                            },
                            "scoreItems": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "scoringBand": {
                              "type": "object",
                              "properties": {
                                "scoringBandName": {
                                  "type": "string"
                                },
                                "scoringBandLabel": {
                                  "type": "string"
                                },
                                "scoringBandCategoryName": {
                                  "type": "string"
                                },
                                "scoringBandColor": {
                                  "type": "string"
                                },
                                "rangeFrom": {
                                  "type": "number"
                                },
                                "rangeTo": {
                                  "type": "number"
                                },
                                "scoringBandLinkedTemplateId": {
                                  "type": "string"
                                }
                              }
                            },
                            "isTotalScore": {
                              "type": "boolean"
                            },
                            "hasConstituentScores": {
                              "type": "boolean"
                            },
                            "constituentScores": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "erpVendorId": {
                          "type": "string"
                        },
                        "sourceSystem": {
                          "type": "string"
                        },
                        "smVendorId": {
                          "type": "string"
                        },
                        "nextStatusId": {
                          "type": "string"
                        },
                        "processId": {
                          "type": "string"
                        },
                        "filter": {
                          "type": "string"
                        },
                        "vendorName": {
                          "type": "string"
                        },
                        "approver": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "endDate": {
                          "type": "string"
                        },
                        "reprocessDate": {
                          "type": "string"
                        },
                        "statusUpdatedDate": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "newStatusId": {
                          "type": "string"
                        },
                        "filterPaths": {
                          "type": "string"
                        },
                        "workspaceExtInfo": {
                          "type": "string"
                        },
                        "autoApproval": {
                          "type": "string"
                        },
                        "archivedStatusId": {
                          "type": "string"
                        },
                        "rootId": {
                          "type": "string"
                        },
                        "timeUpdated": {
                          "type": "string"
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "Questionnaire": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "vendorInfo": {
                "type": "object",
                "properties": {
                  "smVendorId": {
                    "type": "string"
                  },
                  "erpVendorId": {
                    "type": "string"
                  },
                  "anId": {
                    "type": "string"
                  },
                  "acmId": {
                    "type": "string"
                  },
                  "pageToken": {
                    "type": "string"
                  }
                }
              },
              "count": {
                "type": "string"
              }
            }
          }
        }
      },
      "QuestionnairesForVendorAndQuestionnaireResponse": {
        "type": "object",
        "properties": {
          "vendorInfo": {
            "type": "object",
            "properties": {
              "smVendorId": {
                "type": "string"
              },
              "erpVendorId": {
                "type": "string"
              },
              "anId": {
                "type": "string"
              },
              "acmId": {
                "type": "string"
              }
            }
          },
          "questionnaire": {
            "type": "object",
            "properties": {
              "workspaceId": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "questionnaireId": {
                "type": "string"
              },
              "docTitle": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "hasBeenCompleted": {
                "type": "string"
              },
              "shouldReuse": {
                "type": "string"
              },
              "shouldShowOnProfile": {
                "type": "string"
              },
              "shouldKeepOpen": {
                "type": "string"
              },
              "isExpiry": {
                "type": "string"
              },
              "hasCertificates": {
                "type": "string"
              },
              "isInternal": {
                "type": "string"
              },
              "isRequired": {
                "type": "string"
              },
              "questionnaireUpdatedDate": {
                "type": "string"
              },
              "isDirectMaterialApplicable": {
                "type": "string"
              },
              "templateId": {
                "type": "string"
              },
              "evaluationType": {
                "type": "string"
              },
              "scoreCard": {
                "type": "object",
                "properties": {
                  "totalScore": {
                    "type": "number"
                  },
                  "scoreCardStatus": {
                    "type": "string"
                  },
                  "scoreDate": {
                    "type": "string"
                  },
                  "scoredBy": {
                    "type": "string"
                  },
                  "scoredOnBehalfOf": {
                    "type": "string"
                  },
                  "fromDate": {
                    "type": "string"
                  },
                  "toDate": {
                    "type": "string"
                  },
                  "scoreItems": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "scoringBand": {
                    "type": "object",
                    "properties": {
                      "scoringBandName": {
                        "type": "string"
                      },
                      "scoringBandLabel": {
                        "type": "string"
                      },
                      "scoringBandCategoryName": {
                        "type": "string"
                      },
                      "scoringBandColor": {
                        "type": "string"
                      },
                      "rangeFrom": {
                        "type": "number"
                      },
                      "rangeTo": {
                        "type": "number"
                      },
                      "scoringBandLinkedTemplateId": {
                        "type": "string"
                      }
                    }
                  },
                  "isTotalScore": {
                    "type": "boolean"
                  },
                  "hasConstituentScores": {
                    "type": "boolean"
                  },
                  "constituentScores": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              },
              "erpVendorId": {
                "type": "string"
              },
              "sourceSystem": {
                "type": "string"
              },
              "smVendorId": {
                "type": "string"
              },
              "nextStatusId": {
                "type": "string"
              },
              "processId": {
                "type": "string"
              },
              "filter": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              },
              "approver": {
                "type": "string"
              },
              "startDate": {
                "type": "string"
              },
              "endDate": {
                "type": "string"
              },
              "reprocessDate": {
                "type": "string"
              },
              "statusUpdatedDate": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "newStatusId": {
                "type": "string"
              },
              "filterPaths": {
                "type": "string"
              },
              "workspaceExtInfo": {
                "type": "string"
              },
              "autoApproval": {
                "type": "string"
              },
              "archivedStatusId": {
                "type": "string"
              },
              "rootId": {
                "type": "string"
              },
              "timeUpdated": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "QuestionAnswers": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "QuestionnaireWithScores": {
        "type": "object",
        "properties": {
          "scores": {
            "type": "object",
            "properties": {
              "totalScore": {
                "type": "number"
              },
              "totalTarget": {
                "type": "number"
              },
              "scoringBand": {
                "type": "object",
                "$ref": "#/definitions/ScoringBand"
              },
              "scoreItems": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ScoreItems"
                }
              }
            }
          }
        }
      },
      "ScoringBand": {
        "type": "object",
        "properties": {
          "scoringBandName": {
            "type": "string"
          },
          "scoringBandLabel": {
            "type": "string"
          },
          "scoringBandCategoryName": {
            "type": "string"
          },
          "scoringBandColor": {
            "type": "string"
          },
          "rangeFrom": {
            "type": "integer"
          },
          "rangeTo": {
            "type": "integer"
          }
        }
      },
      "ScoreItems": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string"
          },
          "itemLabel": {
            "type": "string"
          },
          "isSection": {
            "type": "boolean",
            "example": false
          },
          "itemCorrelationId": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "target": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "scoringBand": {
            "type": "object",
            "$ref": "#/definitions/ScoringBand"
          },
          "childScoreItems": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ScoreItems"
            },
            "example": []
          }
        }
      },
      "QuestionAndAnswersResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "questionAnswerList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "questionAnswer": {
                      "type": "object",
                      "properties": {
                        "itemId": {
                          "type": "string"
                        },
                        "externalSystemCorrelationId": {
                          "type": "string"
                        },
                        "questionnaireId": {
                          "type": "string"
                        },
                        "answer": {
                          "type": "string"
                        },
                        "dataType": {
                          "type": "string"
                        },
                        "multiValued": {
                          "type": "boolean"
                        },
                        "smVendorId": {
                          "type": "string"
                        },
                        "workspaceType": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "totalQuestions": {
                          "type": "integer"
                        },
                        "questionnaireLabel": {
                          "type": "string"
                        },
                        "questionLabel": {
                          "type": "string"
                        },
                        "answerType": {
                          "type": "string"
                        },
                        "active": {
                          "type": "string"
                        },
                        "alternative": {
                          "type": "string"
                        },
                        "processId": {
                          "type": "string"
                        },
                        "searchTerm": {
                          "type": "string"
                        },
                        "enumerationCodeDelimiters": {
                          "type": "string"
                        },
                        "dirty": {
                          "type": "string"
                        },
                        "rootId": {
                          "type": "string"
                        },
                        "timeUpdated": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "vendorInfo": {
                "type": "object",
                "properties": {
                  "smVendorId": {
                    "type": "string"
                  },
                  "erpVendorId": {
                    "type": "string"
                  },
                  "anId": {
                    "type": "string"
                  },
                  "acmId": {
                    "type": "string"
                  }
                }
              },
              "pageToken": {
                "type": "string"
              },
              "count": {
                "type": "string"
              }
            }
          }
        }
      },
      "CertificatesResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "certificateList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "certificate": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "effectiveDate": {
                          "type": "string"
                        },
                        "expirationDate": {
                          "type": "string"
                        },
                        "issueDate": {
                          "type": "string"
                        },
                        "certificationNumber": {
                          "type": "string"
                        },
                        "certificationName": {
                          "type": "string"
                        },
                        "certificationLocation": {
                          "type": "string"
                        },
                        "yearValid": {
                          "type": "string"
                        },
                        "fileName": {
                          "type": "string"
                        },
                        "fileSize": {
                          "type": "string"
                        },
                        "fileDescription": {
                          "type": "string"
                        },
                        "fileAbsolutePath": {
                          "type": "string"
                        },
                        "attachmentName": {
                          "type": "string"
                        },
                        "certified": {
                          "type": "boolean"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "workspaceType": {
                          "type": "string"
                        },
                        "questionnaireId": {
                          "type": "string"
                        },
                        "smVendorId": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "qualificationStatus": {
                          "type": "string"
                        },
                        "expirationNotificationWindow": {
                          "type": "integer"
                        },
                        "expirationFlag": {
                          "type": "boolean"
                        },
                        "certificationType": {
                          "type": "string"
                        },
                        "active": {
                          "type": "string"
                        },
                        "timeUpdated": {
                          "type": "string"
                        },
                        "externalSystemCorrelationId": {
                          "type": "string"
                        },
                        "expirationReminderDate": {
                          "type": "string"
                        },
                        "authorityInfo": {
                          "type": "string"
                        },
                        "orgId": {
                          "type": "string"
                        },
                        "objId": {
                          "type": "string"
                        },
                        "contentId": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "attachment": {
                          "type": "string"
                        },
                        "rootId": {
                          "type": "string"
                        },
                        "dirty": {
                          "type": "string"
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "QuestionAnswers": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "vendorInfo": {
                "type": "object",
                "properties": {
                  "smVendorId": {
                    "type": "string"
                  },
                  "erpVendorId": {
                    "type": "string"
                  },
                  "anId": {
                    "type": "string"
                  },
                  "acmId": {
                    "type": "string"
                  }
                }
              },
              "pageToken": {
                "type": "string"
              },
              "count": {
                "type": "string"
              }
            }
          }
        }
      },
      "StatusRequest": {
        "properties": {
          "statusList": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StatusApi"
            }
          },
          "statusType": {
            "type": "string",
            "description": "Type of status",
            "enum": [
              "Qualification",
              "Preferred"
            ]
          }
        },
        "example": {
          "statusList": {
            "status": "Qualified",
            "category": "72",
            "region": "North America",
            "businessUnit": "abc",
            "erpVendorId": "VDR12345",
            "sourceSystem": "SM"
          },
          "statusType": "Qualification"
        }
      },
      "StatusApi": {
        "properties": {
          "active": {
            "type": "boolean",
            "description": "If set to false, will inactivate status record"
          },
          "businessUnit": {
            "type": "string",
            "description": "Department code"
          },
          "category": {
            "type": "string",
            "description": "Commodity code"
          },
          "endDate": {
            "type": "string",
            "description": "End date in ISO format"
          },
          "erpVendorId": {
            "type": "string",
            "description": "ERP vendor id of supplier"
          },
          "region": {
            "type": "string",
            "description": "Region code"
          },
          "requalificationEligibleDate": {
            "type": "string",
            "description": "Date after which requalification is allowed"
          },
          "sourceSystem": {
            "type": "string",
            "description": "Source system for the erp vendor id."
          },
          "startDate": {
            "type": "string",
            "description": "Start date in ISO format"
          },
          "status": {
            "type": "string",
            "description": "Qualification status or Preferred level",
            "enum": [
              "Qualified",
              "Disqualified",
              "Expired",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5"
            ]
          },
          "statusQualifier": {
            "type": "string",
            "description": "Additional attribute about status"
          }
        }
      },
      "StatusResponse": {
        "properties": {
          "response": {
            "type": "string"
          },
          "successful": {
            "type": "boolean"
          }
        }
      },
      "UpdateAnswerResponse": {
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorType": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "cause": {
                  "type": "string"
                },
                "resolution": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "inputObject": {
                  "type": "string"
                }
              }
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "debugInfo": {
            "type": "object",
            "properties": {
              "requestProcessingTime": {
                "type": "string"
              },
              "storeProcessingTime": {
                "type": "string"
              }
            }
          },
          "moreDataAvailable": {
            "type": "boolean"
          },
          "nextToken": {
            "type": "string"
          },
          "errorsByVendor": {
            "type": "string"
          },
          "warningMessages": {
            "type": "string"
          }
        }
      },
      "ProcessTypeResponse": {
        "type": "object",
        "properties": {
          "processTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uniqueName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "aribaLifeCycle": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "IntakeFormResponse": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "templateProcessId": {
            "type": "string"
          },
          "questionAnswerList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "questionAnswer": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "externalSystemCorrelationId": {
                      "type": "string"
                    },
                    "questionnaireId": {
                      "type": "string"
                    },
                    "answer": {
                      "type": "string"
                    },
                    "dataType": {
                      "type": "string"
                    },
                    "multiValued": {
                      "type": "boolean"
                    },
                    "smVendorId": {
                      "type": "string"
                    },
                    "workspaceType": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "totalQuestions": {
                      "type": "integer"
                    },
                    "questionnaireLabel": {
                      "type": "string"
                    },
                    "questionLabel": {
                      "type": "string"
                    },
                    "answerType": {
                      "type": "string"
                    },
                    "active": {
                      "type": "string"
                    },
                    "alternative": {
                      "type": "string"
                    },
                    "processId": {
                      "type": "string"
                    },
                    "searchTerm": {
                      "type": "string"
                    },
                    "enumerationCodeDelimiters": {
                      "type": "string"
                    },
                    "dirty": {
                      "type": "string"
                    },
                    "rootId": {
                      "type": "string"
                    },
                    "timeUpdated": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "QuestionnaireTemplateRequest": {
        "properties": {
          "categoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "71",
              "51"
            ]
          },
          "regionList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "USA",
              "INDIA"
            ]
          },
          "departmentList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "408",
              "1000"
            ]
          },
          "materialList": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "templateId": {
            "type": "string"
          }
        }
      },
      "QuestionnaireTemplateResponse": {
        "properties": {
          "questionnaires": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "internalId": {
                  "type": "string"
                },
                "questionnaireType": {
                  "type": "string"
                },
                "isInternal": {
                  "type": "boolean"
                },
                "isRequired": {
                  "type": "boolean"
                },
                "requestUpdate": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "BulkProcessCreateRequests": {
        "properties": {
          "processCreateRequest": {
            "type": "array",
            "items": {
              "properties": {
                "aribaLifeCycle": {
                  "type": "string"
                },
                "templateId": {
                  "type": "string",
                  "description": "The id of the SM process project template."
                },
                "workspaceId": {
                  "type": "string",
                  "description": "Id of the workspace created for the SM process project."
                },
                "processType": {
                  "type": "string"
                },
                "expiryDetail": {
                  "type": "object",
                  "properties": {
                    "expiryOffset": {
                      "type": "string"
                    },
                    "expiryFrequency": {
                      "type": "string"
                    },
                    "expiryReminderOffset": {
                      "type": "string"
                    },
                    "expiryReminderFrequency": {
                      "type": "string"
                    }
                  }
                },
                "matrix": {
                  "type": "object",
                  "properties": {
                    "categoryIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "71",
                        "51"
                      ]
                    },
                    "regionIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "USA",
                        "INDIA"
                      ]
                    },
                    "departmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "408",
                        "1000"
                      ]
                    },
                    "materialIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "smProcessVendors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "smVendorId": {
                        "type": "string"
                      },
                      "currentProcessId": {
                        "type": "string"
                      },
                      "isRenew": {
                        "type": "boolean"
                      },
                      "recipient": {
                        "type": "object",
                        "properties": {
                          "s4UniqueName": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "passwordAdapter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "modularQuestionnaires": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "internalId": {
                        "type": "string"
                      },
                      "questionnaireType": {
                        "type": "string"
                      },
                      "isInternal": {
                        "type": "boolean"
                      },
                      "isRequired": {
                        "type": "boolean"
                      },
                      "requestUpdate": {
                        "type": "boolean"
                      },
                      "recipient": {
                        "type": "object",
                        "properties": {
                          "s4UniqueName": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "passwordAdapter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "answers": {
                  "type": "object",
                  "example": [
                    {
                      "externalSystemCorrelationId": "KI_9951113",
                      "answer": "simpleAnswer"
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951112",
                      "answer": "alternativeAnswer0",
                      "alternative": "0"
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951112",
                      "answer": "alternativeAnswer1",
                      "alternative": "1"
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951114",
                      "extendedAddressAnswer": {
                        "default": {
                          "countryCode": "IN",
                          "regionCode": "03",
                          "buildingID": "",
                          "roomID": "",
                          "floorID": "",
                          "careOfName": "",
                          "streetPrefixName": "streett2",
                          "additionalStreetPrefixName": "streett3",
                          "streetName": "farm road",
                          "houseID": "75",
                          "additionalHouseID": "",
                          "streetSuffixName": "",
                          "additionalStreetSuffixName": "",
                          "districtName": "beng",
                          "additionalCityName": "",
                          "streetPostalCode": "560061",
                          "cityName": "beng",
                          "streetAddressMailNonDeliveryReasonCode": "",
                          "timeZoneCode": "",
                          "taxJurisdictionCode": "",
                          "transportationZoneID": "",
                          "companyPostalCode": "",
                          "regionalStructureElementGroupCode": "",
                          "regionalStructureAddressConsistencyStatusCode": "",
                          "regionalStructureCityCode": "",
                          "additionalRegionalStructureCityCode": "",
                          "regionalStructureDistrictCode": "",
                          "regionalStructureStreetCode": "",
                          "poBoxPostalCode": "",
                          "poBoxDeviatingCityName": "",
                          "poBoxLobbyName": "",
                          "poBoxID": "",
                          "poBoxAddressMailNonDeliveryReasonCode": "",
                          "poBoxIDVisibleIndicator": false,
                          "poBoxDeliveryServiceID": "",
                          "poBoxDeliveryServiceTypeCode": "",
                          "poBoxDeviatingRegionalStructureCityCode": ""
                        }
                      }
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951115",
                      "bankAccountAnswer": {
                        "name": "SBI",
                        "key": "11",
                        "id": "0000",
                        "state": "KA",
                        "country": "IN",
                        "line1": "MG Road",
                        "bankName": "SBI",
                        "city": "Bangalore",
                        "postalCode": "560001",
                        "validationErrorsList": [],
                        "collectionAuthorisationIndicator": false,
                        "bankBranch": "Koramangala",
                        "accountName": "Jagadeesh",
                        "accountNumber": "22",
                        "bankAccountExternalID": "44",
                        "bankAccountType": "Savings",
                        "controlKey": "",
                        "bankAccountStandardID": "33"
                      }
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951116",
                      "certificateAnswer": {
                        "certified": true,
                        "objId": "AAb0Ae2gI+ZmR",
                        "id": "9406194",
                        "externalSystemCorrelationId": "KI_9951116",
                        "certificateType": "Certificate",
                        "issuer": "SAP",
                        "yearOfPublication": "2020",
                        "certificateNumber": "2020",
                        "certificateLocation": "Banagalore",
                        "effectiveDate": "10/8/2020",
                        "expirationDate": "10/31/2020",
                        "attachment": {
                          "id": "Doc14820427,AAb0Ae2gI+ZmR,AAb0AH4gI+ZmS",
                          "fileName": "result (2).csv",
                          "mimeType": "text/csv",
                          "fileSize": 163
                        },
                        "workspaceId": "WS14819322",
                        "workspaceType": "SupplierRegistration",
                        "docId": "Doc14820427",
                        "uniqueName": "",
                        "createMode": false
                      }
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951118",
                      "addressAnswer": {
                        "street": "HSR",
                        "city": "Bangalore",
                        "state": "KA",
                        "postalCode": "560001",
                        "countryCode": "IN"
                      }
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951119",
                      "itemId": "9406198",
                      "taxDataAnswer": {
                        "answers": [
                          {
                            "itemId": "9406198.0",
                            "sliceVersion": 0,
                            "sliceIncarnationVersion": 0,
                            "answer": "IN",
                            "itemTag": "CountryCode"
                          },
                          {
                            "itemId": "9406198.1",
                            "sliceVersion": 0,
                            "sliceIncarnationVersion": 0,
                            "itemTag": "TaxNumberDetailTable"
                          },
                          {
                            "itemId": "9406198.1.0",
                            "alternative": "0",
                            "sliceVersion": 0,
                            "sliceIncarnationVersion": 0,
                            "answer": "India: Tax Identification Number (TIN)",
                            "itemTag": "TaxName",
                            "moreValue": "taxCode=01"
                          },
                          {
                            "itemId": "9406198.1.1",
                            "alternative": "0",
                            "sliceVersion": 0,
                            "sliceIncarnationVersion": 0,
                            "answer": "Organization",
                            "itemTag": "TaxType"
                          },
                          {
                            "itemId": "9406198.1.2",
                            "alternative": "0",
                            "sliceVersion": 0,
                            "sliceIncarnationVersion": 0,
                            "answer": "123",
                            "itemTag": "TaxNumber"
                          }
                        ]
                      }
                    },
                    {
                      "externalSystemCorrelationId": "KI_9951111",
                      "multiValueAnswer": [
                        "US",
                        "IN",
                        "CA"
                      ]
                    }
                  ]
                },
                "processCreationMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "BulkProcessCreateResponse": {
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorType": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "cause": {
                  "type": "string"
                },
                "resolution": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "inputObject": {
                  "type": "string"
                }
              }
            }
          },
          "matrixCriteria": {
            "type": "object",
            "properties": {
              "categoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "71",
                  "51"
                ]
              },
              "regionList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "USA",
                  "INDIA"
                ]
              },
              "departmentList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "408",
                  "1000"
                ]
              },
              "materialList": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "processType": {
            "type": "string"
          },
          "duplicateProcesses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "smVendorId": {
                  "type": "string"
                },
                "currentProcessId": {
                  "type": "string"
                },
                "isRenew": {
                  "type": "boolean"
                },
                "recipient": {
                  "type": "object",
                  "properties": {
                    "s4UniqueName": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "passwordAdapter": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ProcessesResponse": {
        "type": "object",
        "properties": {
          "vendorInfo": {
            "type": "object",
            "properties": {
              "smVendorId": {
                "type": "string"
              },
              "erpVendorId": {
                "type": "string"
              },
              "anId": {
                "type": "string"
              },
              "acmId": {
                "type": "string"
              }
            }
          },
          "processes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "wid": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "sourceSystem": {
                  "type": "string"
                },
                "processId": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string"
                },
                "projectOwner": {
                  "type": "string"
                },
                "matrixCriteria": {
                  "type": "object",
                  "properties": {
                    "categoryList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "71",
                        "51"
                      ]
                    },
                    "regionList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "USA",
                        "INDIA"
                      ]
                    },
                    "departmentList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "408",
                        "1000"
                      ]
                    },
                    "materialList": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "decisionMadeOn": {
                  "type": "string",
                  "example": "1664772985"
                },
                "statusUniqueName": {
                  "type": "string",
                  "example": "DApproved"
                }
              }
            }
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "ProcessDetailsResponse": {
        "type": "object",
        "properties": {
          "vendorInfo": {
            "type": "object",
            "properties": {
              "smVendorId": {
                "type": "string"
              },
              "erpVendorId": {
                "type": "string"
              },
              "anId": {
                "type": "string"
              },
              "acmId": {
                "type": "string"
              }
            }
          },
          "matrixCriteria": {
            "type": "object",
            "properties": {
              "categoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "71",
                  "51"
                ]
              },
              "regionList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "USA",
                  "INDIA"
                ]
              },
              "departmentList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "408",
                  "1000"
                ]
              },
              "materialList": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "supplierName": {
            "type": "string"
          },
          "processType": {
            "type": "string"
          },
          "workspaceId": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          },
          "reminderDate": {
            "type": "string"
          },
          "intakeFormDocId": {
            "type": "string"
          },
          "ownerObj": {
            "type": "object",
            "properties": {
              "uniqueName": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "hierarchyPath": {
                "type": "object"
              },
              "emailAddres": {
                "type": "string"
              }
            }
          },
          "decisionHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "decisionMadeBy": {
                  "type": "string"
                },
                "decisionComment": {
                  "type": "string"
                },
                "processStatus": {
                  "type": "string"
                },
                "processStatusObj": {
                  "type": "object",
                  "properties": {
                    "uniqueName": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "hierarchyPath": {
                      "type": "string"
                    }
                  }
                },
                "decisionMadeByObject": {
                  "type": "object",
                  "properties": {
                    "uniqueName": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "hierarchyPath": {
                      "type": "string"
                    },
                    "emailAddress": {
                      "type": "string"
                    }
                  }
                },
                "decisionMadeOn": {
                  "type": "string"
                }
              }
            }
          },
          "questionnaireList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "wid": {
                  "type": "string"
                },
                "docId": {
                  "type": "string"
                },
                "questionnaireType": {
                  "type": "string"
                },
                "isInternal": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                },
                "score": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "QuestionnaireVersionsResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "versionAnswersList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "questionnaireVersion": {
                      "type": "object",
                      "properties": {
                        "versionId": {
                          "type": "integer"
                        },
                        "sliceId": {
                          "type": "string"
                        },
                        "sliceVersion": {
                          "type": "string"
                        },
                        "baseIdDBString": {
                          "type": "string"
                        },
                        "timeUpdated": {
                          "type": "string"
                        },
                        "timeCreated": {
                          "type": "string"
                        },
                        "timeSubmitted": {
                          "type": "string"
                        },
                        "referenceNumber": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer"
                        },
                        "submittedFor": {
                          "type": "string"
                        },
                        "submittedBy": {
                          "type": "string"
                        },
                        "submittedForFullName": {
                          "type": "string"
                        },
                        "submittedByFullName": {
                          "type": "string"
                        },
                        "versionStatus": {
                          "type": "string"
                        },
                        "lastApprover": {
                          "type": "string"
                        }
                      }
                    },
                    "questionAnswer": {
                      "type": "object",
                      "properties": {
                        "itemId": {
                          "type": "string"
                        },
                        "externalSystemCorrelationId": {
                          "type": "string"
                        },
                        "questionnaireId": {
                          "type": "string"
                        },
                        "answer": {
                          "type": "string"
                        },
                        "dataType": {
                          "type": "string"
                        },
                        "multiValued": {
                          "type": "boolean"
                        },
                        "smVendorId": {
                          "type": "string"
                        },
                        "workspaceType": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "totalQuestions": {
                          "type": "integer"
                        },
                        "questionnaireLabel": {
                          "type": "string"
                        },
                        "questionLabel": {
                          "type": "string"
                        },
                        "answerType": {
                          "type": "string"
                        },
                        "active": {
                          "type": "string"
                        },
                        "alternative": {
                          "type": "string"
                        },
                        "processId": {
                          "type": "string"
                        },
                        "searchTerm": {
                          "type": "string"
                        },
                        "enumerationCodeDelimiters": {
                          "type": "string"
                        },
                        "dirty": {
                          "type": "string"
                        },
                        "rootId": {
                          "type": "string"
                        },
                        "timeUpdated": {
                          "type": "string"
                        },
                        "attachmentData": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "fileName": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "fileContents": {
                              "type": "string"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "downloadUrl": {
                              "type": "string"
                            },
                            "fileSize": {
                              "type": "integer"
                            }
                          }
                        },
                        "commentData": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "comment": {
                                "type": "string"
                              },
                              "isEdit": {
                                "type": "boolean"
                              },
                              "attachmentData": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "fileName": {
                                    "type": "string"
                                  },
                                  "mimeType": {
                                    "type": "string"
                                  },
                                  "fileContents": {
                                    "type": "string"
                                  },
                                  "comment": {
                                    "type": "string"
                                  },
                                  "downloadUrl": {
                                    "type": "string"
                                  },
                                  "fileSize": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "certificateData": {
                          "type": "object",
                          "properties": {
                            "certified": {
                              "type": "boolean"
                            },
                            "id": {
                              "type": "string"
                            },
                            "certificateType": {
                              "type": "string"
                            },
                            "issuer": {
                              "type": "string"
                            },
                            "yearOfPublication": {
                              "type": "string"
                            },
                            "certificateNumber": {
                              "type": "string"
                            },
                            "certificateLocation": {
                              "type": "string"
                            },
                            "effectiveDate": {
                              "type": "string"
                            },
                            "expirationDate": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "issuerId": {
                              "type": "string"
                            },
                            "auditResult": {
                              "type": "string"
                            },
                            "attachmentData": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "fileName": {
                                  "type": "string"
                                },
                                "mimeType": {
                                  "type": "string"
                                },
                                "fileContents": {
                                  "type": "string"
                                },
                                "comment": {
                                  "type": "string"
                                },
                                "downloadUrl": {
                                  "type": "string"
                                },
                                "fileSize": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "vendorInfo": {
                "type": "object",
                "properties": {
                  "smVendorId": {
                    "type": "string"
                  },
                  "erpVendorId": {
                    "type": "string"
                  },
                  "anId": {
                    "type": "string"
                  },
                  "acmId": {
                    "type": "string"
                  }
                }
              },
              "pageToken": {
                "type": "string"
              },
              "count": {
                "type": "string"
              }
            }
          }
        }
      },
      "ExtendDateRequest": {
        "type": "object",
        "properties": {
          "expiryDate": {
            "type": "string",
            "example": "MM/DD/YYYY"
          },
          "dueDate": {
            "type": "string",
            "example": "MM/DD/YYYY"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "ExtendDateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "debugMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "200",
            "example": 200
          }
        }
      },
      "VendorExtResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "purposes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "purpose": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    }
                  }
                }
              }
            }
          },
          "displayId": {
            "type": "string",
            "maxLength": 10
          },
          "businessPartnerType": {
            "type": "string",
            "maxLength": 20
          },
          "person": {
            "type": "object",
            "properties": {
              "nameDetails": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "middleName": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "lastName": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "secondLastName": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "initials": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "formOfAddress": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "maxLength": 255
                      }
                    }
                  },
                  "academicTitle": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "maxLength": 255
                      }
                    }
                  },
                  "additionalAcademicTitle": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "maxLength": 255
                      }
                    }
                  },
                  "namePrefix": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "maxLength": 255
                      }
                    }
                  },
                  "additionalNamePrefix": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "maxLength": 255
                      }
                    }
                  },
                  "nameSuffix": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "maxLength": 255
                      }
                    }
                  },
                  "formattedPersonName": {
                    "type": "string",
                    "maxLength": 4000
                  },
                  "scriptVariants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "scriptCode"
                      ],
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "maxLength": 128
                        },
                        "middleName": {
                          "type": "string",
                          "maxLength": 128
                        },
                        "lastName": {
                          "type": "string",
                          "maxLength": 128
                        },
                        "secondLastName": {
                          "type": "string",
                          "maxLength": 128
                        },
                        "initials": {
                          "type": "string",
                          "maxLength": 128
                        },
                        "formOfAddress": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 255
                            }
                          }
                        },
                        "academicTitle": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 255
                            }
                          }
                        },
                        "additionalAcademicTitle": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 255
                            }
                          }
                        },
                        "namePrefix": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 255
                            }
                          }
                        },
                        "additionalNamePrefix": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 255
                            }
                          }
                        },
                        "nameSuffix": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 255
                            }
                          }
                        },
                        "formattedPersonName": {
                          "type": "string",
                          "maxLength": 4000
                        },
                        "birthName": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "nickName": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "maritalStatus": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 1
                            }
                          }
                        },
                        "naturalPersonEmployerName": {
                          "type": "string",
                          "maxLength": 35
                        },
                        "businessPartnerOccupationGroup": {
                          "type": "string",
                          "maxLength": 4
                        },
                        "businessPartnerBirthplaceName": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "businessPartnerDeathDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "nameCountry": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 2
                            }
                          }
                        },
                        "nameFormat": {
                          "type": "string",
                          "maxLength": 2
                        },
                        "scriptCode": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "gender": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1
                  }
                }
              },
              "language": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 35
                  }
                }
              },
              "correspondenceLanguage": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 35
                  }
                }
              },
              "birthDate": {
                "type": "string",
                "format": "date"
              },
              "nationality": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              }
            }
          },
          "organization": {
            "type": "object",
            "properties": {
              "nameDetails": {
                "type": "object",
                "properties": {
                  "formattedOrgNameLine1": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "formattedOrgNameLine2": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "formattedOrgNameLine3": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "formattedOrgNameLine4": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "formattedOrgName": {
                    "type": "string",
                    "maxLength": 512
                  },
                  "scriptVariants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "scriptCode"
                      ],
                      "properties": {
                        "formattedOrgNameLine1": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "formattedOrgNameLine2": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "formattedOrgNameLine3": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "formattedOrgNameLine4": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "formattedOrgName": {
                          "type": "string",
                          "maxLength": 512
                        },
                        "scriptCode": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "legalForm": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "industries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "industrySector",
                    "industrySystemType"
                  ],
                  "properties": {
                    "industrySector": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 10
                        }
                      }
                    },
                    "industrySystemType": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 4
                        }
                      }
                    },
                    "isStandardIndustry": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "globalLocationNumber": {
                "type": "string",
                "maxLength": 13
              },
              "foundationDate": {
                "type": "string",
                "format": "date"
              },
              "liquidationDate": {
                "type": "string",
                "format": "date"
              },
              "tradingPartnerId": {
                "type": "string",
                "maxLength": 6
              }
            }
          },
          "businessPartnerGroup": {
            "type": "object",
            "properties": {
              "primaryGroupName": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "scriptVariants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "scriptCode"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "scriptCode": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "secondaryGroupName": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "scriptVariants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "scriptCode"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 40
                        },
                        "scriptCode": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "groupType": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 4
                  }
                }
              }
            }
          },
          "lifecycleStatus": {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2
              }
            }
          },
          "isBlocked": {
            "type": "boolean"
          },
          "identifications": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "identificationType",
                "identificationNumber"
              ],
              "properties": {
                "validFrom": {
                  "type": "string",
                  "format": "date"
                },
                "validTo": {
                  "type": "string",
                  "format": "date"
                },
                "identificationType": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 6
                    }
                  }
                },
                "identificationNumber": {
                  "type": "string",
                  "maxLength": 60
                },
                "entryDate": {
                  "type": "string",
                  "format": "date"
                },
                "country": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 2
                    }
                  }
                },
                "region": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 6
                    }
                  }
                },
                "institute": {
                  "type": "string",
                  "maxLength": 40
                }
              }
            }
          },
          "bankAccounts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "validFrom": {
                  "type": "string",
                  "format": "date"
                },
                "validTo": {
                  "type": "string",
                  "format": "date"
                },
                "bankCountry": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 2
                    }
                  }
                },
                "bankAccountHolderName": {
                  "type": "string",
                  "maxLength": 256
                },
                "IBAN": {
                  "type": "string",
                  "maxLength": 34
                },
                "bankAccount": {
                  "type": "string",
                  "maxLength": 35
                },
                "bankNumber": {
                  "type": "string",
                  "maxLength": 15
                },
                "bankAccountReference": {
                  "type": "string",
                  "maxLength": 20
                },
                "bankAccountCurrency": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 3
                    }
                  }
                },
                "additionalPaymentReference": {
                  "type": "string",
                  "maxLength": 40
                },
                "alternatePaymentAccount": {
                  "type": "string",
                  "maxLength": 256
                },
                "id": {
                  "type": "string",
                  "maxLength": 4
                },
                "bankAccountName": {
                  "type": "string",
                  "maxLength": 40
                },
                "bankControlKey": {
                  "type": "string",
                  "maxLength": 2
                }
              }
            }
          },
          "taxNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "taxNumberType"
              ],
              "properties": {
                "taxNumberType": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 4
                    }
                  }
                },
                "taxNumber": {
                  "type": "string",
                  "maxLength": 60
                }
              }
            }
          },
          "addressData": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                },
                "validFrom": {
                  "type": "string",
                  "format": "date"
                },
                "validTo": {
                  "type": "string",
                  "format": "date"
                },
                "isIndependent": {
                  "type": "boolean"
                },
                "usages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "usage",
                      "validTo"
                    ],
                    "properties": {
                      "usage": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 10
                          }
                        }
                      },
                      "validTo": {
                        "type": "string",
                        "format": "date"
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date"
                      },
                      "isStandard": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "communicationPreferences": {
                  "type": "object",
                  "properties": {
                    "communicationMethod": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 3
                        }
                      }
                    },
                    "nonVerbalCommunicationLanguage": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 35
                        }
                      }
                    }
                  }
                },
                "postalAddressType": {
                  "type": "string",
                  "maxLength": 25
                },
                "personPostalAddress": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "middleName": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "lastName": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "secondLastName": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "initials": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "formOfAddress": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 255
                        }
                      }
                    },
                    "academicTitle": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 255
                        }
                      }
                    },
                    "additionalAcademicTitle": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 255
                        }
                      }
                    },
                    "namePrefix": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 255
                        }
                      }
                    },
                    "additionalNamePrefix": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 255
                        }
                      }
                    },
                    "nameSuffix": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 255
                        }
                      }
                    },
                    "formattedPersonName": {
                      "type": "string",
                      "maxLength": 4000
                    },
                    "streetPrefix1": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "streetPrefix2": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "street": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        }
                      }
                    },
                    "streetSuffix1": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "streetSuffix2": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "houseNumber": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "houseNumberSupplement": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "floor": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "door": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "careOf": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "primaryRegion": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 6
                        }
                      }
                    },
                    "secondaryRegion": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 8
                            }
                          }
                        }
                      }
                    },
                    "tertiaryRegion": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 8
                            }
                          }
                        }
                      }
                    },
                    "town": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        }
                      }
                    },
                    "district": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        }
                      }
                    },
                    "country": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "postCode": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "postBoxIsWithoutNumber": {
                      "type": "boolean"
                    },
                    "companyPostalCode": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "deliveryServiceNumber": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "additionalCityName": {
                      "type": "string",
                      "maxLength": 40
                    },
                    "alternative": {
                      "type": "object",
                      "properties": {
                        "country": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 2
                            }
                          }
                        },
                        "postCode": {
                          "type": "string",
                          "maxLength": 10
                        },
                        "primaryRegion": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 6
                            }
                          }
                        },
                        "secondaryRegion": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 8
                                }
                              }
                            }
                          }
                        },
                        "tertiaryRegion": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 8
                                }
                              }
                            }
                          }
                        },
                        "town": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 10
                                }
                              }
                            }
                          }
                        },
                        "district": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 10
                                }
                              }
                            }
                          }
                        },
                        "deliveryType": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        },
                        "deliveryServiceType": {
                          "type": "string",
                          "maxLength": 64
                        },
                        "deliveryServiceQualifier": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "deliveryServiceIdentifier": {
                          "type": "string",
                          "maxLength": 256
                        }
                      }
                    },
                    "coordinates": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "altitude": {
                          "type": "number"
                        }
                      }
                    },
                    "timeZone": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    },
                    "scriptVariants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "scriptCode"
                        ],
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "maxLength": 128
                          },
                          "middleName": {
                            "type": "string",
                            "maxLength": 128
                          },
                          "lastName": {
                            "type": "string",
                            "maxLength": 128
                          },
                          "secondLastName": {
                            "type": "string",
                            "maxLength": 128
                          },
                          "initials": {
                            "type": "string",
                            "maxLength": 128
                          },
                          "formOfAddress": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 255
                              }
                            }
                          },
                          "academicTitle": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 255
                              }
                            }
                          },
                          "additionalAcademicTitle": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 255
                              }
                            }
                          },
                          "namePrefix": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 255
                              }
                            }
                          },
                          "additionalNamePrefix": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 255
                              }
                            }
                          },
                          "nameSuffix": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 255
                              }
                            }
                          },
                          "formattedPersonName": {
                            "type": "string",
                            "maxLength": 4000
                          },
                          "streetPrefix1": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "streetPrefix2": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "street": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              }
                            }
                          },
                          "streetSuffix1": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "streetSuffix2": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "houseNumber": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "houseNumberSupplement": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "floor": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "door": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "careOf": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "primaryRegion": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 6
                              }
                            }
                          },
                          "secondaryRegion": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 8
                                  }
                                }
                              }
                            }
                          },
                          "tertiaryRegion": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 8
                                  }
                                }
                              }
                            }
                          },
                          "town": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              }
                            }
                          },
                          "district": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              }
                            }
                          },
                          "country": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          },
                          "postCode": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "postBoxIsWithoutNumber": {
                            "type": "boolean"
                          },
                          "companyPostalCode": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "deliveryServiceNumber": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "additionalCityName": {
                            "type": "string",
                            "maxLength": 40
                          },
                          "alternative": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 2
                                  }
                                }
                              },
                              "postCode": {
                                "type": "string",
                                "maxLength": 10
                              },
                              "primaryRegion": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 6
                                  }
                                }
                              },
                              "secondaryRegion": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 8
                                      }
                                    }
                                  }
                                }
                              },
                              "tertiaryRegion": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 8
                                      }
                                    }
                                  }
                                }
                              },
                              "town": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 10
                                      }
                                    }
                                  }
                                }
                              },
                              "district": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 10
                                      }
                                    }
                                  }
                                }
                              },
                              "deliveryType": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              },
                              "deliveryServiceType": {
                                "type": "string",
                                "maxLength": 64
                              },
                              "deliveryServiceQualifier": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "deliveryServiceIdentifier": {
                                "type": "string",
                                "maxLength": 256
                              }
                            }
                          },
                          "coordinates": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              },
                              "altitude": {
                                "type": "number"
                              }
                            }
                          },
                          "timeZone": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 32
                              }
                            }
                          },
                          "scriptCode": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 4
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "organizationPostalAddress": {
                  "type": "object",
                  "properties": {
                    "formattedOrgNameLine1": {
                      "type": "string",
                      "maxLength": 40
                    },
                    "formattedOrgNameLine2": {
                      "type": "string",
                      "maxLength": 40
                    },
                    "formattedOrgNameLine3": {
                      "type": "string",
                      "maxLength": 40
                    },
                    "formattedOrgNameLine4": {
                      "type": "string",
                      "maxLength": 40
                    },
                    "formattedOrgName": {
                      "type": "string",
                      "maxLength": 512
                    },
                    "streetPrefix1": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "streetPrefix2": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "street": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        }
                      }
                    },
                    "streetSuffix1": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "streetSuffix2": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "houseNumber": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "houseNumberSupplement": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "floor": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "door": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "careOf": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "primaryRegion": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 6
                        }
                      }
                    },
                    "secondaryRegion": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 8
                            }
                          }
                        }
                      }
                    },
                    "tertiaryRegion": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 8
                            }
                          }
                        }
                      }
                    },
                    "town": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        }
                      }
                    },
                    "district": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "ref": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        }
                      }
                    },
                    "country": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "postCode": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "postBoxIsWithoutNumber": {
                      "type": "boolean"
                    },
                    "companyPostalCode": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "deliveryServiceNumber": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "additionalCityName": {
                      "type": "string",
                      "maxLength": 40
                    },
                    "alternative": {
                      "type": "object",
                      "properties": {
                        "country": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 2
                            }
                          }
                        },
                        "postCode": {
                          "type": "string",
                          "maxLength": 10
                        },
                        "primaryRegion": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 6
                            }
                          }
                        },
                        "secondaryRegion": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 8
                                }
                              }
                            }
                          }
                        },
                        "tertiaryRegion": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 8
                                }
                              }
                            }
                          }
                        },
                        "town": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 10
                                }
                              }
                            }
                          }
                        },
                        "district": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "ref": {
                              "type": "object",
                              "required": [
                                "code"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 10
                                }
                              }
                            }
                          }
                        },
                        "deliveryType": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 10
                            }
                          }
                        },
                        "deliveryServiceType": {
                          "type": "string",
                          "maxLength": 64
                        },
                        "deliveryServiceQualifier": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "deliveryServiceIdentifier": {
                          "type": "string",
                          "maxLength": 256
                        }
                      }
                    },
                    "coordinates": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "altitude": {
                          "type": "number"
                        }
                      }
                    },
                    "timeZone": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    },
                    "scriptVariants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "scriptCode"
                        ],
                        "properties": {
                          "formattedOrgNameLine1": {
                            "type": "string",
                            "maxLength": 40
                          },
                          "formattedOrgNameLine2": {
                            "type": "string",
                            "maxLength": 40
                          },
                          "formattedOrgNameLine3": {
                            "type": "string",
                            "maxLength": 40
                          },
                          "formattedOrgNameLine4": {
                            "type": "string",
                            "maxLength": 40
                          },
                          "formattedOrgName": {
                            "type": "string",
                            "maxLength": 512
                          },
                          "streetPrefix1": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "streetPrefix2": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "street": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              }
                            }
                          },
                          "streetSuffix1": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "streetSuffix2": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "houseNumber": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "houseNumberSupplement": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "floor": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "door": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "careOf": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "primaryRegion": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 6
                              }
                            }
                          },
                          "secondaryRegion": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 8
                                  }
                                }
                              }
                            }
                          },
                          "tertiaryRegion": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 8
                                  }
                                }
                              }
                            }
                          },
                          "town": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              }
                            }
                          },
                          "district": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "ref": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              }
                            }
                          },
                          "country": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          },
                          "postCode": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "postBoxIsWithoutNumber": {
                            "type": "boolean"
                          },
                          "companyPostalCode": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "deliveryServiceNumber": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "additionalCityName": {
                            "type": "string",
                            "maxLength": 40
                          },
                          "alternative": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 2
                                  }
                                }
                              },
                              "postCode": {
                                "type": "string",
                                "maxLength": 10
                              },
                              "primaryRegion": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 6
                                  }
                                }
                              },
                              "secondaryRegion": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 8
                                      }
                                    }
                                  }
                                }
                              },
                              "tertiaryRegion": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 8
                                      }
                                    }
                                  }
                                }
                              },
                              "town": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 10
                                      }
                                    }
                                  }
                                }
                              },
                              "district": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256
                                  },
                                  "ref": {
                                    "type": "object",
                                    "required": [
                                      "code"
                                    ],
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "maxLength": 10
                                      }
                                    }
                                  }
                                }
                              },
                              "deliveryType": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 10
                                  }
                                }
                              },
                              "deliveryServiceType": {
                                "type": "string",
                                "maxLength": 64
                              },
                              "deliveryServiceQualifier": {
                                "type": "string",
                                "maxLength": 256
                              },
                              "deliveryServiceIdentifier": {
                                "type": "string",
                                "maxLength": 256
                              }
                            }
                          },
                          "coordinates": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              },
                              "altitude": {
                                "type": "number"
                              }
                            }
                          },
                          "timeZone": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 32
                              }
                            }
                          },
                          "scriptCode": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 4
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "emailAddresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date"
                      },
                      "validTo": {
                        "type": "string",
                        "format": "date"
                      },
                      "usageDeniedIndicator": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string",
                        "maxLength": 256
                      }
                    }
                  }
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "country": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 2
                          }
                        }
                      },
                      "number": {
                        "type": "string",
                        "maxLength": 132
                      },
                      "numberExtension": {
                        "type": "string",
                        "maxLength": 10
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date"
                      },
                      "validTo": {
                        "type": "string",
                        "format": "date"
                      },
                      "usageDeniedIndicator": {
                        "type": "boolean"
                      },
                      "smsEnabledIndicator": {
                        "type": "boolean"
                      },
                      "isMobile": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "faxNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "country": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 2
                          }
                        }
                      },
                      "number": {
                        "type": "string",
                        "maxLength": 132
                      },
                      "numberExtension": {
                        "type": "string",
                        "maxLength": 10
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date"
                      },
                      "validTo": {
                        "type": "string",
                        "format": "date"
                      },
                      "usageDeniedIndicator": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "websites": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date"
                      },
                      "validTo": {
                        "type": "string",
                        "format": "date"
                      },
                      "uriType": {
                        "type": "string",
                        "maxLength": 3
                      },
                      "url": {
                        "type": "string",
                        "maxLength": 2048
                      }
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "role"
              ],
              "properties": {
                "validFrom": {
                  "type": "string",
                  "format": "date"
                },
                "validTo": {
                  "type": "string",
                  "format": "date"
                },
                "role": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxLength": 6
                    }
                  }
                }
              }
            }
          },
          "customerInformation": {
            "type": "object",
            "properties": {
              "isOrderBlocked": {
                "type": "boolean"
              },
              "orderBlockedReason": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "isDeliveryBlocked": {
                "type": "boolean"
              },
              "deliveryBlockedReason": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "isBillingBlocked": {
                "type": "boolean"
              },
              "billingBlockedReason": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerClassification": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerCorporateGroup": {
                "type": "string",
                "maxLength": 10
              },
              "customerAccountGroup": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 4
                  }
                }
              },
              "isMarkedForDeletion": {
                "type": "boolean"
              },
              "nielsenRegion": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "salesBlockForCustomer": {
                "type": "boolean"
              },
              "expressTrainStationName": {
                "type": "string",
                "maxLength": 25
              },
              "fiscalAddress": {
                "type": "string",
                "maxLength": 10
              },
              "isEqualizationTaxSubject": {
                "type": "boolean"
              },
              "vatLiability": {
                "type": "boolean"
              },
              "alternativePayerIsAllowed": {
                "type": "boolean"
              },
              "plannedAnnualSalesYear": {
                "type": "string",
                "maxLength": 4
              },
              "plannedAnnualSalesCurrency": {
                "type": "string",
                "maxLength": 5
              },
              "plannedAnnualSalesAmount": {
                "type": "string",
                "pattern": "^-?([1-9][0-9]{0,12}|[0])[.][0-9]{1,2}$"
              },
              "dataMediumExchangeIndicator": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1
                  }
                }
              },
              "dataExchangeInstruction": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerConditionGroup1": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerConditionGroup2": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerConditionGroup3": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerConditionGroup4": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerConditionGroup5": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "cfopCategory": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "internationalLocationNumber1": {
                "type": "string",
                "maxLength": 7
              },
              "internationalLocationNumber2": {
                "type": "string",
                "maxLength": 5
              },
              "internationalLocationNumber3": {
                "type": "string",
                "maxLength": 1
              },
              "postingIsBlocked": {
                "type": "boolean"
              },
              "customerTradingPartnerId": {
                "type": "string",
                "maxLength": 6
              },
              "industryCode1": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 10
                  }
                }
              },
              "industryCode2": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 10
                  }
                }
              },
              "industryCode3": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 10
                  }
                }
              },
              "industryCode4": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 10
                  }
                }
              },
              "industryCode5": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 10
                  }
                }
              },
              "fiscalYearVariant": {
                "type": "string",
                "maxLength": 2
              },
              "accountTaxType": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "customerExtensionCode01": {
                "type": "string",
                "maxLength": 2
              },
              "customerExtensionCode02": {
                "type": "string",
                "maxLength": 2
              },
              "customerExtensionCode03": {
                "type": "string",
                "maxLength": 2
              },
              "customerExtensionCode04": {
                "type": "string",
                "maxLength": 2
              },
              "customerExtensionCode05": {
                "type": "string",
                "maxLength": 2
              },
              "customerExtensionCode06": {
                "type": "string",
                "maxLength": 3
              },
              "customerExtensionCode07": {
                "type": "string",
                "maxLength": 3
              },
              "customerExtensionCode08": {
                "type": "string",
                "maxLength": 3
              },
              "customerExtensionCode09": {
                "type": "string",
                "maxLength": 3
              },
              "customerExtensionCode10": {
                "type": "string",
                "maxLength": 3
              },
              "representativeName": {
                "type": "string",
                "maxLength": 10
              },
              "businessType": {
                "type": "string",
                "maxLength": 30
              },
              "industryType": {
                "type": "string",
                "maxLength": 30
              },
              "salesArrangements": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "salesAreaRef"
                  ],
                  "properties": {
                    "isOrderBlocked": {
                      "type": "boolean"
                    },
                    "orderBlockedReason": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "isDeliveryBlocked": {
                      "type": "boolean"
                    },
                    "deliveryBlockedReason": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "isBillingBlocked": {
                      "type": "boolean"
                    },
                    "billingBlockedReason": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "incotermsClassification": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 3
                        }
                      }
                    },
                    "incotermsTransferLocationName": {
                      "type": "string",
                      "maxLength": 28
                    },
                    "salesOfficeDisplayId": {
                      "type": "string",
                      "maxLength": 4
                    },
                    "salesGroupDisplayId": {
                      "type": "string",
                      "maxLength": 4
                    },
                    "salesBlockForCustomer": {
                      "type": "boolean"
                    },
                    "completeDeliveryIsDefined": {
                      "type": "boolean"
                    },
                    "salesAreaRef": {
                      "type": "object",
                      "required": [
                        "salesOrganizationDisplayId",
                        "distributionChannel",
                        "division"
                      ],
                      "properties": {
                        "salesOrganizationDisplayId": {
                          "type": "string",
                          "maxLength": 4
                        },
                        "distributionChannel": {
                          "type": "string",
                          "maxLength": 2
                        },
                        "division": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "isDeliveryCombinationAllowed": {
                      "type": "boolean"
                    },
                    "isDeliveryInChunksAllowed": {
                      "type": "boolean"
                    },
                    "maxCountDeliveryChunks": {
                      "type": "number"
                    },
                    "deliveryPriority": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "currency": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 3
                        }
                      }
                    },
                    "salesArrangementGroup": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "salesArrangementPriceGroup": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "functions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "functionName"
                        ],
                        "properties": {
                          "partnerDescription": {
                            "type": "string",
                            "maxLength": 30
                          },
                          "partnerNumber": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "functionName": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "functionCode": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 10
                              }
                            }
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "functionPartnerType": {
                            "type": "string",
                            "maxLength": 30
                          },
                          "functionPartnerContactPerson": {
                            "type": "object",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              }
                            }
                          },
                          "functionPartnerWorkforcePerson": {
                            "type": "object",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              }
                            }
                          }
                        }
                      }
                    },
                    "isMarkedForDeletion": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "taxClassifications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "country",
                    "taxCategory"
                  ],
                  "properties": {
                    "country": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "taxCategory": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 4
                        }
                      }
                    },
                    "taxClassification": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 4
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "supplierInformation": {
            "type": "object",
            "properties": {
              "isPurchasingBlocked": {
                "type": "boolean"
              },
              "purchasingBlockingReason": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 4
                  }
                }
              },
              "isPostingBlocked": {
                "type": "boolean"
              },
              "postingBlockingReason": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 4
                  }
                }
              },
              "isPaymentBlocked": {
                "type": "boolean"
              },
              "paymentBlockingReason": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 4
                  }
                }
              },
              "vatLiability": {
                "type": "boolean"
              },
              "deletionIndicator": {
                "type": "boolean"
              },
              "responsibleType": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              },
              "accountingInformation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "companyCodeDisplayId"
                  ],
                  "properties": {
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isPostingBlocked": {
                      "type": "boolean"
                    },
                    "postingBlockingReason": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 4
                        }
                      }
                    },
                    "isPaymentBlocked": {
                      "type": "boolean"
                    },
                    "paymentBlockingReason": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 4
                        }
                      }
                    },
                    "reconciliationAccountNumber": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "minorityGroup": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "isDoubleInvoice": {
                      "type": "boolean"
                    },
                    "houseBank": {
                      "type": "string",
                      "maxLength": 5
                    },
                    "cashPlanningGroup": {
                      "type": "string",
                      "maxLength": 10
                    },
                    "accountingClerkInternetAddress": {
                      "type": "string",
                      "maxLength": 130
                    },
                    "companyCodeDisplayId": {
                      "type": "string",
                      "maxLength": 4
                    },
                    "accountNumberAtSupplier": {
                      "type": "string",
                      "maxLength": 12
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "paymentMethod"
                        ],
                        "properties": {
                          "paymentMethod": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "invoiceSortingOrder": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 3
                        }
                      }
                    },
                    "isAlternativePayeeUsed": {
                      "type": "boolean"
                    },
                    "alternativePayees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "alternativePayeeName"
                        ],
                        "properties": {
                          "alternativePayeeName": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "alternativePayeeType": {
                            "type": "string",
                            "maxLength": 15
                          },
                          "alternativePayeeBusinessPartner": {
                            "type": "object",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              }
                            }
                          }
                        }
                      }
                    },
                    "accountingClerk": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        }
                      }
                    },
                    "withholdingTaxes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "recipientType": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          },
                          "type": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          },
                          "subType": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          },
                          "taxNumber": {
                            "type": "string",
                            "maxLength": 16
                          },
                          "exemption": {
                            "type": "object",
                            "properties": {
                              "validFrom": {
                                "type": "string",
                                "format": "date"
                              },
                              "validTo": {
                                "type": "string",
                                "format": "date"
                              },
                              "certificateNumber": {
                                "type": "string",
                                "maxLength": 15
                              },
                              "reason": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 2
                                  }
                                }
                              },
                              "percentage": {
                                "type": "string",
                                "pattern": "^-?([1-9][0-9]{0,2}|[0])[.][0-9]{1,2}$"
                              }
                            }
                          }
                        }
                      }
                    },
                    "isMarkedForDeletion": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "purchasingArrangements": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "purchasingOrganizationDisplayId"
                  ],
                  "properties": {
                    "isPurchasingBlocked": {
                      "type": "boolean"
                    },
                    "purchasingBlockingReason": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 4
                        }
                      }
                    },
                    "purchasingGroupDisplayId": {
                      "type": "string",
                      "maxLength": 3
                    },
                    "purchasingOrganizationDisplayId": {
                      "type": "string",
                      "maxLength": 4
                    },
                    "currency": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 3
                        }
                      }
                    },
                    "classification": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 1
                        }
                      }
                    },
                    "calculationSchema": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "isAutoGenerationOfPurchaseOrdersAllowed": {
                      "type": "boolean"
                    },
                    "incotermsClassification": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "maxLength": 3
                        }
                      }
                    },
                    "incotermsTransferLocationName": {
                      "type": "string",
                      "maxLength": 28
                    },
                    "functions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "functionName"
                        ],
                        "properties": {
                          "partnerDescription": {
                            "type": "string",
                            "maxLength": 30
                          },
                          "partnerNumber": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "functionName": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "functionCode": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 4
                              }
                            }
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "functionPartnerType": {
                            "type": "string",
                            "maxLength": 30
                          },
                          "functionPartnerContactPerson": {
                            "type": "object",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              }
                            }
                          },
                          "functionPartnerWorkforcePerson": {
                            "type": "object",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              }
                            }
                          }
                        }
                      }
                    },
                    "isMarkedForDeletion": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "supplierGenericCustomField": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "type",
                    "content"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "title": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "languageCode": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "table": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "field": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "checkTable": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "receiverTable": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "receiverField": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "receiverCheckTable": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "maxLength": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "minLength": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "pattern": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "totalDigits": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "fractionDigits": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "maxInclusive": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "minInclusive": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "displayRestrictions": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "editRestrictions": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "content": {
                      "type": "string",
                      "maxLength": 128
                    }
                  }
                }
              },
              "businessPartnerGenericCustomField": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "type",
                    "content"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "title": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "languageCode": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "table": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "field": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "checkTable": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "receiverTable": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "receiverField": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "receiverCheckTable": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "maxLength": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "minLength": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "pattern": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "totalDigits": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "fractionDigits": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "maxInclusive": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "minInclusive": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "displayRestrictions": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "editRestrictions": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "content": {
                      "type": "string",
                      "maxLength": 128
                    }
                  }
                }
              },
              "bpKeyMappings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "objectIdentifierSetListCompleteTransmissionIndicator",
                    "businessSystemId",
                    "typeCode",
                    "objectSchemaCode",
                    "objectId"
                  ],
                  "properties": {
                    "objectIdentifierSetListCompleteTransmissionIndicator": {
                      "type": "boolean"
                    },
                    "businessSystemId": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "typeCode": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "objectSchemaCode": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "objectId": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CancelProcessRequest": {
        "type": "object",
        "properties": {
          "processCancellationRequest": {
            "type": "object",
            "required": [
              "initiatorUniqueName",
              "initiatorPasswordAdapter"
            ],
            "properties": {
              "internalComment": {
                "type": "string",
                "example": "cancel this process"
              },
              "externalComment": {
                "type": "string",
                "example": "cancel this process"
              },
              "initiatorUniqueName": {
                "type": "string",
                "example": "testuser"
              },
              "initiatorPasswordAdapter": {
                "type": "string",
                "example": "PasswordAdapter"
              },
              "deleted": {
                "type": "boolean",
                "default": true
              }
            }
          }
        }
      },
      "JobDetailsResponse": {
        "type": "object",
        "properties": {
          "jobInfo": {
            "type": "object",
            "properties": {
              "jobId": {
                "type": "string",
                "example": "abcd1234"
              },
              "status": {
                "type": "string",
                "example": "success"
              },
              "processes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vendorInfo": {
                      "type": "object",
                      "properties": {
                        "smVendorId": {
                          "type": "string",
                          "example": "S1234"
                        },
                        "erpVendorId": {
                          "type": "string",
                          "example": "VDR1234"
                        },
                        "anId": {
                          "type": "string",
                          "example": "acn1234"
                        },
                        "acmId": {
                          "type": "string"
                        }
                      }
                    },
                    "processId": {
                      "type": "string",
                      "example": "WS1234"
                    },
                    "status": {
                      "type": "string",
                      "example": "In Progress"
                    },
                    "isRenew": {
                      "type": "boolean",
                      "example": true
                    },
                    "processType": {
                      "type": "string",
                      "example": "Audit Process"
                    }
                  }
                }
              },
              "matrixCriteria": {
                "type": "object",
                "properties": {
                  "categoryList": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "71",
                      "51"
                    ]
                  },
                  "regionList": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "USA",
                      "INDIA"
                    ]
                  },
                  "departmentList": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "408",
                      "1000"
                    ]
                  },
                  "materialList": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              },
              "createdBy": {
                "example": "testuser",
                "type": "string"
              },
              "timeUpdated": {
                "type": "string",
                "example": 1664772985
              },
              "timeCreated": {
                "type": "string",
                "example": 1664772985
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "properties": {
          "status": {
            "type": "string",
            "description": "Accepted"
          },
          "statusCode": {
            "type": "integer",
            "example": 202
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorType": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "cause": {
                  "type": "string"
                },
                "resolution": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    }
  }